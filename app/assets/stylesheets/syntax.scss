@import 'config/import';

:root {
  --syntax-background-color: #08090a;
  --syntax-text-color: #f8f8f2;
  --syntax-comment-color: #808080;
  --syntax-declaration-color: #f39c12;
  --syntax-literal-color: #dda0dd;
  --syntax-error-color: #f9690e;
  --syntax-name-color: #7ed07e;
  --syntax-string-color: #f2ca27;
}

pre:not(.highlight),
div.highlight {
  background: var(--syntax-background-color);
  color: var(--syntax-text-color);
  font-size: 80%;
  padding: var(--su-2);
  border-radius: var(--radius);
  margin: 0;
  white-space: pre;
  overflow-x: scroll;
  -webkit-overflow-scrolling: touch;

  code {
    font-size: 100%;
    padding: 0;
  }

  @media (min-width: $breakpoint-m) {
    padding: var(--su-6);
  }
}

code {
  background: var(--base-a10);
  color: var(--color-body-color);
  border-radius: var(--radius);
  max-width: 100%;
  font-size: 80%;
  padding: 0.1em 0.25em;
}

.highlight .hll {
  background-color: #49483e;
}
.highlight {
  background: var(--syntax-background-color);
  color: var(--syntax-text-color);
}
.highlight .c {
  color: var(--syntax-comment-color);
} /* Comment */
.highlight .err {
  text-shadow: 0 0 7px var(--syntax-error-color);
} /* Error */
.highlight .k {
  color: var(--syntax-declaration-color);
} /* Keyword */
.highlight .l {
  color: var(--syntax-literal-color);
} /* Literal */
.highlight .n {
  color: var(--syntax-text-color);
} /* Name */
.highlight .o {
  color: var(--syntax-error-color);
} /* Operator */
.highlight .p {
  color: var(--syntax-text-color);
} /* Punctuation */
.highlight .ch {
  color: var(--syntax-comment-color);
} /* Comment.Hashbang */
.highlight .cm {
  color: var(--syntax-comment-color);
} /* Comment.Multiline */
.highlight .cp {
  color: var(--syntax-comment-color);
} /* Comment.Preproc */
.highlight .cpf {
  color: var(--syntax-comment-color);
} /* Comment.PreprocFile */
.highlight .c1 {
  color: var(--syntax-comment-color);
} /* Comment.Single */
.highlight .cs {
  color: var(--syntax-comment-color);
} /* Comment.Special */
.highlight .gd {
  color: var(--syntax-error-color);
} /* Generic.Deleted */
.highlight .ge {
  font-style: italic;
} /* Generic.Emph */
.highlight .gi {
  color: var(--syntax-name-color);
} /* Generic.Inserted */
.highlight .gs {
  font-weight: var(--fw-bold);
} /* Generic.Strong */
.highlight .gu {
  color: var(--syntax-comment-color);
} /* Generic.Subheading */
.highlight .kc {
  color: var(--syntax-declaration-color);
} /* Keyword.Constant */
.highlight .kd {
  color: var(--syntax-declaration-color);
} /* Keyword.Declaration */
.highlight .kn {
  color: var(--syntax-error-color);
} /* Keyword.Namespace */
.highlight .kp {
  color: var(--syntax-declaration-color);
} /* Keyword.Pseudo */
.highlight .kr {
  color: var(--syntax-declaration-color);
} /* Keyword.Reserved */
.highlight .kt {
  color: var(--syntax-declaration-color);
} /* Keyword.Type */
.highlight .ld {
  color: var(--syntax-string-color);
} /* Literal.Date */
.highlight .m {
  color: var(--syntax-literal-color);
} /* Literal.Number */
.highlight .s {
  color: var(--syntax-string-color);
} /* Literal.String */
.highlight .na {
  color: var(--syntax-name-color);
} /* Name.Attribute */
.highlight .nb {
  color: var(--syntax-text-color);
} /* Name.Builtin */
.highlight .nc {
  color: var(--syntax-name-color);
} /* Name.Class */
.highlight .no {
  color: var(--syntax-declaration-color);
} /* Name.Constant */
.highlight .nd {
  color: var(--syntax-name-color);
} /* Name.Decorator */
.highlight .ni {
  color: var(--syntax-text-color);
} /* Name.Entity */
.highlight .ne {
  color: var(--syntax-name-color);
} /* Name.Exception */
.highlight .nf {
  color: var(--syntax-name-color);
} /* Name.Function */
.highlight .nl {
  color: var(--syntax-text-color);
} /* Name.Label */
.highlight .nn {
  color: var(--syntax-text-color);
} /* Name.Namespace */
.highlight .nx {
  color: var(--syntax-name-color);
} /* Name.Other */
.highlight .py {
  color: var(--syntax-text-color);
} /* Name.Property */
.highlight .nt {
  color: var(--syntax-error-color);
} /* Name.Tag */
.highlight .nv {
  color: var(--syntax-text-color);
} /* Name.Variable */
.highlight .ow {
  color: var(--syntax-error-color);
} /* Operator.Word */
.highlight .w {
  color: var(--syntax-text-color);
} /* Text.Whitespace */
.highlight .mb {
  color: var(--syntax-literal-color);
} /* Literal.Number.Bin */
.highlight .mf {
  color: var(--syntax-literal-color);
} /* Literal.Number.Float */
.highlight .mh {
  color: var(--syntax-literal-color);
} /* Literal.Number.Hex */
.highlight .mi {
  color: var(--syntax-literal-color);
} /* Literal.Number.Integer */
.highlight .mo {
  color: var(--syntax-literal-color);
} /* Literal.Number.Oct */
.highlight .sa {
  color: var(--syntax-string-color);
} /* Literal.String.Affix */
.highlight .sb {
  color: var(--syntax-string-color);
} /* Literal.String.Backtick */
.highlight .sc {
  color: var(--syntax-string-color);
} /* Literal.String.Char */
.highlight .dl {
  color: var(--syntax-string-color);
} /* Literal.String.Delimiter */
.highlight .sd {
  color: var(--syntax-string-color);
} /* Literal.String.Doc */
.highlight .s2 {
  color: var(--syntax-string-color);
} /* Literal.String.Double */
.highlight .se {
  color: var(--syntax-literal-color);
} /* Literal.String.Escape */
.highlight .sh {
  color: var(--syntax-string-color);
} /* Literal.String.Heredoc */
.highlight .si {
  color: var(--syntax-string-color);
} /* Literal.String.Interpol */
.highlight .sx {
  color: var(--syntax-string-color);
} /* Literal.String.Other */
.highlight .sr {
  color: var(--syntax-string-color);
} /* Literal.String.Regex */
.highlight .s1 {
  color: var(--syntax-string-color);
} /* Literal.String.Single */
.highlight .ss {
  color: var(--syntax-string-color);
} /* Literal.String.Symbol */
.highlight .bp {
  color: var(--syntax-text-color);
} /* Name.Builtin.Pseudo */
.highlight .fm {
  color: var(--syntax-name-color);
} /* Name.Function.Magic */
.highlight .vc {
  color: var(--syntax-text-color);
} /* Name.Variable.Class */
.highlight .vg {
  color: var(--syntax-text-color);
} /* Name.Variable.Global */
.highlight .vi {
  color: var(--syntax-text-color);
} /* Name.Variable.Instance */
.highlight .vm {
  color: var(--syntax-text-color);
} /* Name.Variable.Magic */
.highlight .il {
  color: var(--syntax-literal-color);
} /* Literal.Number.Integer.Long */
