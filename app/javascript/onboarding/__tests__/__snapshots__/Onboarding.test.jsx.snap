// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Onboarding /> BioForm renders properly 1`] = `
preact-render-spy (1 nodes)
-------
<main class="onboarding-body">
  <div class="onboarding-main">
    <nav class="onboarding-navigation">
      <div class="navigation-content">
        <button
          onClick={[Function bound prevSlide]}
          class="back-button"
          type="button"
        >
          Back
        </button>
        <button
          onClick={[Function bound onSubmit]}
          class="next-button"
          type="button"
        >
          Continue
        </button>
      </div>
    </nav>
    <div class="onboarding-content about">
      <header class="onboarding-content-header">
        <h1 class="title">Introduce yourself</h1>
        <h2 class="subtitle">
          Tell the community about yourself. Write a quick bio about what you do, what you're interested in, or anything else.
        </h2>
      </header>
      <form>
        <label htmlFor="summary">
          Bio
          <textarea
            name="summary"
            placeholder="Tell us about yourself"
            onChange={[Function bound handleChange]}
            maxLength="120"
          >
          </textarea>
        </label>
      </form>
    </div>
  </div>
</main>

`;

exports[`<Onboarding /> CloseSlide renders properly 1`] = `
preact-render-spy (1 nodes)
-------
<main class="onboarding-body">
  <div class="onboarding-main">
    <div class="onboarding-content">
      <header class="onboarding-content-header">
        <h1 class="title">
          You‚Äòre a part of the community!
          <span
            role="img"
            aria-label="tada"
          >
             üéâ
          </span>
        </h1>
        <h2 class="subtitle">What next?</h2>
      </header>
      <div class="onboarding-what-next">
        <a
          href="/welcome"
          data-no-instant={true}
        >
          <p>
            <span
              class="whatnext-emoji"
              role="img"
              aria-label="tada"
            >
              üòä
            </span>
            Join the Welcome Thread
          </p>
        </a>
        <a href="/new">
          <p>
            <span
              class="whatnext-emoji"
              role="img"
              aria-label="tada"
            >
              ‚úçÔ∏è
            </span>
            Write your first DEV post
          </p>
        </a>
        <a href="/top/infinity">
          <p>
            <span
              class="whatnext-emoji"
              role="img"
              aria-label="tada"
            >
              ü§ì
            </span>
            Read all-time top posts
          </p>
        </a>
        <a href="/settings">
          <p>
            <span
              class="whatnext-emoji"
              role="img"
              aria-label="tada"
            >
              üíÖ
            </span>
            Customize your profile
          </p>
        </a>
      </div>
    </div>
  </div>
</main>

`;

exports[`<Onboarding /> EmailTermsConditionsForm renders properly 1`] = `
preact-render-spy (1 nodes)
-------
<main class="onboarding-body">
  <div class="onboarding-main">
    <nav class="onboarding-navigation">
      <div class="navigation-content">
        <button
          onClick={[Function bound prevSlide]}
          class="back-button"
          type="button"
        >
          Back
        </button>
        <button
          onClick={[Function bound onSubmit]}
          class="next-button"
          type="button"
        >
          Continue
        </button>
      </div>
    </nav>
    <div class="onboarding-content checkbox-slide">
      <header class="onboarding-content-header">
        <h1 class="title">Getting started</h1>
        <h2 class="subtitle">Let's review a few things first</h2>
      </header>
      <form>
        <fieldset>
          <legend>Some things to check off</legend>
          <ul>
            <li class="checkbox-item">
              <label htmlFor="checked_code_of_conduct">
                <input
                  type="checkbox"
                  id="checked_code_of_conduct"
                  name="checked_code_of_conduct"
                  checked={false}
                  onChange={[Function bound handleChange]}
                 />
                I agree to uphold the 
                <a
                  href="/code-of-conduct"
                  data-no-instant={true}
                  onClick={[Function onClick]}
                >
                  Code of Conduct
                </a>
              </label>
            </li>
            <li class="checkbox-item">
              <label htmlFor="checked_terms_and_conditions">
                <input
                  type="checkbox"
                  id="checked_terms_and_conditions"
                  name="checked_terms_and_conditions"
                  checked={false}
                  onChange={[Function bound handleChange]}
                 />
                I agree to our 
                <a
                  href="/terms"
                  data-no-instant={true}
                  onClick={[Function onClick]}
                >
                  Terms and Conditions
                </a>
              </label>
            </li>
          </ul>
        </fieldset>
        <fieldset>
          <legend>Email preferences</legend>
          <ul>
            <li class="checkbox-item">
              <label htmlFor="email_newsletter">
                <input
                  type="checkbox"
                  id="email_newsletter"
                  name="email_newsletter"
                  checked={true}
                  onChange={[Function bound handleChange]}
                 />
                I want to receive weekly newsletter emails.
              </label>
            </li>
            <li class="checkbox-item">
              <label htmlFor="email_digest_periodic">
                <input
                  type="checkbox"
                  id="email_digest_periodic"
                  name="email_digest_periodic"
                  checked={true}
                  onChange={[Function bound handleChange]}
                 />
                I want to receive a periodic digest with some of the top posts from your tags.
              </label>
            </li>
          </ul>
        </fieldset>
      </form>
    </div>
  </div>
</main>

`;

exports[`<Onboarding /> FollowTags renders properly 1`] = `
preact-render-spy (1 nodes)
-------
<main class="onboarding-body">
  <div class="onboarding-main">
    <nav class="onboarding-navigation">
      <div class="navigation-content">
        <button
          onClick={[Function bound prevSlide]}
          class="back-button"
          type="button"
        >
          Back
        </button>
        <button
          onClick={[Function bound handleComplete]}
          class="next-button"
          type="button"
        >
          Continue
        </button>
      </div>
    </nav>
    <div class="onboarding-content">
      <header class="onboarding-content-header">
        <h1 class="title">What are you interested in?</h1>
        <h2 class="subtitle">Follow tags to customize your feed</h2>
      </header>
      <div class="onboarding-modal-scroll-container">
        <div class="onboarding-tags">
          <div
            class="onboarding-tags__item false"
            style="box-shadow: inset 0 0 0 2px #000000; color: ;"
          >
            <div class="onboarding-tags__item__inner">
              #discuss
              <button
                type="button"
                onClick={[Function onClick]}
                class="onboarding-tags__button false"
                style="background-color: #000000; color: #ffffff;"
              >
                + Follow
              </button>
            </div>
          </div>
          <div
            class="onboarding-tags__item false"
            style="box-shadow: inset 0 0 0 2px #f7df1e; color: ;"
          >
            <div class="onboarding-tags__item__inner">
              #javascript
              <button
                type="button"
                onClick={[Function onClick]}
                class="onboarding-tags__button false"
                style="background-color: #f7df1e; color: #000000;"
              >
                + Follow
              </button>
            </div>
          </div>
          <div
            class="onboarding-tags__item false"
            style="box-shadow: inset 0 0 0 2px #2a2566; color: ;"
          >
            <div class="onboarding-tags__item__inner">
              #career
              <button
                type="button"
                onClick={[Function onClick]}
                class="onboarding-tags__button false"
                style="background-color: #2a2566; color: #ffffff;"
              >
                + Follow
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</main>

`;

exports[`<Onboarding /> FollowUsers renders properly 1`] = `
preact-render-spy (1 nodes)
-------
<main class="onboarding-body">
  <div class="onboarding-main">
    <nav class="onboarding-navigation">
      <div class="navigation-content">
        <button
          onClick={[Function bound prevSlide]}
          class="back-button"
          type="button"
        >
          Back
        </button>
        <button
          onClick={[Function bound handleComplete]}
          class="next-button"
          type="button"
        >
          Continue
        </button>
      </div>
    </nav>
    <div class="onboarding-content">
      <header class="onboarding-content-header">
        <h1 class="title">Suggested people to follow</h1>
        <h2 class="subtitle">Let's review a few things first</h2>
      </header>
      <div class="onboarding-modal-scroll-container">
        <button
          type="button"
          onClick={[Function onClick]}
          onKeyDown={[Function onKeyDown]}
          class="user content-row selected"
        >
          <figure class="user-avatar-container">
            <img
              class="user-avatar"
              src="ben.jpg"
              alt="profile"
             />
          </figure>
          <div class="user-info">
            <h4 class="user-name">Ben Halpern</h4>
            <p class="user-summary"></p>
          </div>
          <button
            type="button"
            class="user-following-status"
          >
            Following
          </button>
        </button>
        <button
          type="button"
          onClick={[Function onClick]}
          onKeyDown={[Function onKeyDown]}
          class="user content-row selected"
        >
          <figure class="user-avatar-container">
            <img
              class="user-avatar"
              src="clown.jpg"
              alt="profile"
             />
          </figure>
          <div class="user-info">
            <h4 class="user-name">Krusty the Clown</h4>
            <p class="user-summary"></p>
          </div>
          <button
            type="button"
            class="user-following-status"
          >
            Following
          </button>
        </button>
        <button
          type="button"
          onClick={[Function onClick]}
          onKeyDown={[Function onKeyDown]}
          class="user content-row selected"
        >
          <figure class="user-avatar-container">
            <img
              class="user-avatar"
              src="dev.jpg"
              alt="profile"
             />
          </figure>
          <div class="user-info">
            <h4 class="user-name">dev.to staff</h4>
            <p class="user-summary"></p>
          </div>
          <button
            type="button"
            class="user-following-status"
          >
            Following
          </button>
        </button>
      </div>
    </div>
    <div class="onboarding-selection-status">
      <div class="selection-status-content">
        <button
          type="button"
          onClick={[Function onClick]}
        >
          Select All ‚úÖ
        </button>
      </div>
    </div>
  </div>
</main>

`;

exports[`<Onboarding /> IntroSlide renders properly 1`] = `
preact-render-spy (1 nodes)
-------
<main class="onboarding-body">
  <div class="onboarding-main introduction">
    <div class="onboarding-content">
      <figure>
        <img
          src="/assets/purple-dev-logo.png"
          class="sticker-logo"
          alt="DEV"
         />
      </figure>
      <h1 class="introduction-title">Welcome to DEV!</h1>
      <h2 class="introduction-subtitle">
        DEV is where programmers share ideas and help each other grow.
      </h2>
    </div>
    <nav class="onboarding-navigation">
      <div class="navigation-content">
        <button
          onClick={[Function bound onSubmit]}
          class="next-button"
          type="button"
        >
          Continue
        </button>
      </div>
    </nav>
  </div>
</main>

`;

exports[`<Onboarding /> PersonalInformationForm renders properly 1`] = `
preact-render-spy (1 nodes)
-------
<main class="onboarding-body">
  <div class="onboarding-main">
    <nav class="onboarding-navigation">
      <div class="navigation-content">
        <button
          onClick={[Function bound prevSlide]}
          class="back-button"
          type="button"
        >
          Back
        </button>
        <button
          onClick={[Function bound onSubmit]}
          class="next-button"
          type="button"
        >
          Continue
        </button>
      </div>
    </nav>
    <div class="onboarding-content">
      <header class="onboarding-content-header">
        <h1 class="title">About You</h1>
      </header>
      <form>
        <label htmlFor="location">
          Where are you located?
          <input
            type="text"
            name="location"
            id="location"
            placeholder="e.g. New York, NY"
            onChange={[Function bound handleChange]}
            maxLength="60"
           />
        </label>
        <label htmlFor="employment_title">
          What is your title?
          <input
            type="text"
            name="employment_title"
            id="employment_title"
            placeholder="e.g. Software Engineer"
            onChange={[Function bound handleChange]}
            maxLength="60"
           />
        </label>
        <label htmlFor="employer_name">
          Where do you work?
          <input
            type="text"
            name="employer_name"
            id="employer_name"
            placeholder="e.g. Company name, self-employed, etc."
            onChange={[Function bound handleChange]}
            maxLength="60"
           />
        </label>
      </form>
    </div>
  </div>
</main>

`;
