---
http_interactions:
- request:
    method: get
    uri: https://medium.com/media/a2f9060031c431865efd8e395a4db624/href
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 302
      message: Found
    headers:
      Date:
      - Mon, 08 Jan 2018 19:17:20 GMT
      Content-Type:
      - application/octet-stream
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://getpocket.com https://medium.com:443 https://*.medium.com:443
        https://*.medium.com https://medium.com https://*.medium.com https://*.algolia.net
        https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net https://cdn-videos-1.medium.com
        https://cdn-audio-1.medium.com https://*.lightstep.com https://app.zencoder.com
        ''self''; font-src data: https://*.amazonaws.com https://*.medium.com https://glyph.medium.com
        https://medium.com https://*.gstatic.com https://dnqgz544uhbo8.cloudfront.net
        https://use.typekit.net https://cdn-static-1.medium.com ''self''; frame-src
        chromenull: https: webviewprogressproxy: medium: ''self''; img-src blob: data:
        https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1515439040461:293d5c270854
      X-Obvious-Info:
      - 32149-6b210f5,6b210f579c2
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Expires:
      - Thu, 09 Sep 1999 09:09:09 GMT
      Pragma:
      - no-cache
      Tk:
      - T
      Location:
      - https://gist.github.com/vaidehijoshi/8080ab913f4a1e8a1a3b9e0387bf5c3a
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Server:
      - cloudflare-nginx
      Cf-Ray:
      - 3da17f129d0e99ec-EWR
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Mon, 08 Jan 2018 19:17:20 GMT
- request:
    method: get
    uri: https://gist.github.com/vaidehijoshi/8080ab913f4a1e8a1a3b9e0387bf5c3a
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - GitHub.com
      Date:
      - Mon, 08 Jan 2018 19:17:21 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Status:
      - 200 OK
      Cache-Control:
      - no-cache
      Vary:
      - X-PJAX
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      X-Request-Id:
      - d7745f1054643904f4c5b9f0f090a28c
      X-Runtime:
      - '0.356823'
      Expect-Ct:
      - max-age=2592000, report-uri="https://api.github.com/_private/browser/errors"
      Content-Security-Policy:
      - 'default-src ''none''; base-uri ''self''; block-all-mixed-content; child-src
        render.githubusercontent.com; connect-src ''self'' uploads.github.com status.github.com
        collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com
        github-production-repository-file-5c1aeb.s3.amazonaws.com github-production-upload-manifest-file-7fdce7.s3.amazonaws.com
        github-production-user-asset-6210df.s3.amazonaws.com wss://live.github.com;
        font-src assets-cdn.github.com; form-action ''self'' github.com gist.github.com;
        frame-ancestors ''none''; img-src ''self'' data: assets-cdn.github.com identicons.github.com
        collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com;
        media-src ''none''; script-src assets-cdn.github.com; style-src ''unsafe-inline''
        assets-cdn.github.com'
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Runtime-Rack:
      - '0.365971'
      X-Github-Request-Id:
      - D2F5:4D98:2D82350:41C45B9:5A53C3C0
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Mon, 08 Jan 2018 19:17:21 GMT
- request:
    method: get
    uri: https://api.twitter.com/1.1/statuses/show/948256083352735744.json?tweet_mode=extended
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - TwitterRubyGem/6.2.0
      Connection:
      - close
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, must-revalidate, pre-check=0, post-check=0
      Connection:
      - close
      Content-Disposition:
      - attachment; filename=json.json
      Content-Length:
      - '3845'
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Thu, 19 Jul 2018 20:55:25 GMT
      Expires:
      - Tue, 31 Mar 1981 05:00:00 GMT
      Last-Modified:
      - Thu, 19 Jul 2018 20:55:25 GMT
      Pragma:
      - no-cache
      Server:
      - tsa_b
      Status:
      - 200 OK
      Strict-Transport-Security:
      - max-age=631138519
      X-Access-Level:
      - read-write
      X-Connection-Hash:
      - b37f06f55c20058c058e41eba5b16269
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Rate-Limit-Limit:
      - '900'
      X-Rate-Limit-Remaining:
      - '898'
      X-Rate-Limit-Reset:
      - '1532034620'
      X-Response-Time:
      - '33'
      X-Transaction:
      - 00d16a8d00d61f5b
      X-Twitter-Response-Tags:
      - BouncerCompliant
      X-Xss-Protection:
      - 1; mode=block; report=https://twitter.com/i/xss_report
    body:
      encoding: UTF-8
      string: '{"created_at":"Tue Jan 02 18:14:02 +0000 2018","id":948256083352735744,"id_str":"948256083352735744","full_text":"I''m
        a full-stack developer https:\/\/t.co\/wvFikfWJ7f","truncated":false,"display_text_range":[0,26],"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[],"media":[{"id":948256051085770752,"id_str":"948256051085770752","indices":[27,50],"media_url":"http:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","url":"https:\/\/t.co\/wvFikfWJ7f","display_url":"pic.twitter.com\/wvFikfWJ7f","expanded_url":"https:\/\/twitter.com\/bendhalpern\/status\/948256083352735744\/photo\/1","type":"photo","sizes":{"large":{"w":1536,"h":2048,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":900,"h":1200,"resize":"fit"},"small":{"w":510,"h":680,"resize":"fit"}}}]},"extended_entities":{"media":[{"id":948256051085770752,"id_str":"948256051085770752","indices":[27,50],"media_url":"http:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","url":"https:\/\/t.co\/wvFikfWJ7f","display_url":"pic.twitter.com\/wvFikfWJ7f","expanded_url":"https:\/\/twitter.com\/bendhalpern\/status\/948256083352735744\/photo\/1","type":"photo","sizes":{"large":{"w":1536,"h":2048,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":900,"h":1200,"resize":"fit"},"small":{"w":510,"h":680,"resize":"fit"}}}]},"source":"\u003ca
        href=\"http:\/\/twitter.com\/download\/iphone\" rel=\"nofollow\"\u003eTwitter
        for iPhone\u003c\/a\u003e","in_reply_to_status_id":948243620846620673,"in_reply_to_status_id_str":"948243620846620673","in_reply_to_user_id":161419043,"in_reply_to_user_id_str":"161419043","in_reply_to_screen_name":"bendhalpern","user":{"id":161419043,"id_str":"161419043","name":"Ben
        Halpern","screen_name":"bendhalpern","location":"Brooklyn, NY","description":"Creator\/founder\/webmaster
        of https:\/\/t.co\/xHvFQQ9jeO (@ThePracticalDev). Coder, buddhist, feminist,
        Batman.","url":"https:\/\/t.co\/qqIzCffhit","entities":{"url":{"urls":[{"url":"https:\/\/t.co\/qqIzCffhit","expanded_url":"http:\/\/dev.to\/ben","display_url":"dev.to\/ben","indices":[0,23]}]},"description":{"urls":[{"url":"https:\/\/t.co\/xHvFQQ9jeO","expanded_url":"https:\/\/dev.to","display_url":"dev.to","indices":[29,52]}]}},"protected":false,"followers_count":16453,"friends_count":1720,"listed_count":423,"created_at":"Wed
        Jun 30 20:15:57 +0000 2010","favourites_count":20475,"utc_offset":null,"time_zone":null,"geo_enabled":true,"verified":true,"statuses_count":9110,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"EDECE9","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme3\/bg.gif","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme3\/bg.gif","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/855590922486136832\/g8m8zpCp_normal.jpg","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/855590922486136832\/g8m8zpCp_normal.jpg","profile_banner_url":"https:\/\/pbs.twimg.com\/profile_banners\/161419043\/1492834234","profile_link_color":"3A1E75","profile_sidebar_border_color":"FFFFFF","profile_sidebar_fill_color":"E3E2DE","profile_text_color":"634047","profile_use_background_image":true,"has_extended_profile":true,"default_profile":false,"default_profile_image":false,"following":true,"follow_request_sent":false,"notifications":false,"translator_type":"none"},"geo":null,"coordinates":null,"place":null,"contributors":null,"is_quote_status":false,"retweet_count":73,"favorite_count":536,"favorited":true,"retweeted":false,"possibly_sensitive":false,"possibly_sensitive_appealable":false,"lang":"en"}'
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:25 GMT
- request:
    method: get
    uri: https://api.twitter.com/1.1/statuses/show/948256083352735744.json?tweet_mode=extended
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - TwitterRubyGem/6.2.0
      Connection:
      - close
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, must-revalidate, pre-check=0, post-check=0
      Connection:
      - close
      Content-Disposition:
      - attachment; filename=json.json
      Content-Length:
      - '3845'
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Thu, 19 Jul 2018 20:55:51 GMT
      Expires:
      - Tue, 31 Mar 1981 05:00:00 GMT
      Last-Modified:
      - Thu, 19 Jul 2018 20:55:51 GMT
      Pragma:
      - no-cache
      Server:
      - tsa_b
      Status:
      - 200 OK
      Strict-Transport-Security:
      - max-age=631138519
      X-Access-Level:
      - read-write
      X-Connection-Hash:
      - 48f7e961e0990c3ae97d066e6606cdad
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Rate-Limit-Limit:
      - '900'
      X-Rate-Limit-Remaining:
      - '897'
      X-Rate-Limit-Reset:
      - '1532034620'
      X-Response-Time:
      - '61'
      X-Transaction:
      - 00e9c29400c5a60f
      X-Twitter-Response-Tags:
      - BouncerCompliant
      X-Xss-Protection:
      - 1; mode=block; report=https://twitter.com/i/xss_report
    body:
      encoding: UTF-8
      string: '{"created_at":"Tue Jan 02 18:14:02 +0000 2018","id":948256083352735744,"id_str":"948256083352735744","full_text":"I''m
        a full-stack developer https:\/\/t.co\/wvFikfWJ7f","truncated":false,"display_text_range":[0,26],"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[],"media":[{"id":948256051085770752,"id_str":"948256051085770752","indices":[27,50],"media_url":"http:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","url":"https:\/\/t.co\/wvFikfWJ7f","display_url":"pic.twitter.com\/wvFikfWJ7f","expanded_url":"https:\/\/twitter.com\/bendhalpern\/status\/948256083352735744\/photo\/1","type":"photo","sizes":{"large":{"w":1536,"h":2048,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":900,"h":1200,"resize":"fit"},"small":{"w":510,"h":680,"resize":"fit"}}}]},"extended_entities":{"media":[{"id":948256051085770752,"id_str":"948256051085770752","indices":[27,50],"media_url":"http:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","url":"https:\/\/t.co\/wvFikfWJ7f","display_url":"pic.twitter.com\/wvFikfWJ7f","expanded_url":"https:\/\/twitter.com\/bendhalpern\/status\/948256083352735744\/photo\/1","type":"photo","sizes":{"large":{"w":1536,"h":2048,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":900,"h":1200,"resize":"fit"},"small":{"w":510,"h":680,"resize":"fit"}}}]},"source":"\u003ca
        href=\"http:\/\/twitter.com\/download\/iphone\" rel=\"nofollow\"\u003eTwitter
        for iPhone\u003c\/a\u003e","in_reply_to_status_id":948243620846620673,"in_reply_to_status_id_str":"948243620846620673","in_reply_to_user_id":161419043,"in_reply_to_user_id_str":"161419043","in_reply_to_screen_name":"bendhalpern","user":{"id":161419043,"id_str":"161419043","name":"Ben
        Halpern","screen_name":"bendhalpern","location":"Brooklyn, NY","description":"Creator\/founder\/webmaster
        of https:\/\/t.co\/xHvFQQ9jeO (@ThePracticalDev). Coder, buddhist, feminist,
        Batman.","url":"https:\/\/t.co\/qqIzCffhit","entities":{"url":{"urls":[{"url":"https:\/\/t.co\/qqIzCffhit","expanded_url":"http:\/\/dev.to\/ben","display_url":"dev.to\/ben","indices":[0,23]}]},"description":{"urls":[{"url":"https:\/\/t.co\/xHvFQQ9jeO","expanded_url":"https:\/\/dev.to","display_url":"dev.to","indices":[29,52]}]}},"protected":false,"followers_count":16453,"friends_count":1720,"listed_count":423,"created_at":"Wed
        Jun 30 20:15:57 +0000 2010","favourites_count":20475,"utc_offset":null,"time_zone":null,"geo_enabled":true,"verified":true,"statuses_count":9110,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"EDECE9","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme3\/bg.gif","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme3\/bg.gif","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/855590922486136832\/g8m8zpCp_normal.jpg","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/855590922486136832\/g8m8zpCp_normal.jpg","profile_banner_url":"https:\/\/pbs.twimg.com\/profile_banners\/161419043\/1492834234","profile_link_color":"3A1E75","profile_sidebar_border_color":"FFFFFF","profile_sidebar_fill_color":"E3E2DE","profile_text_color":"634047","profile_use_background_image":true,"has_extended_profile":true,"default_profile":false,"default_profile_image":false,"following":true,"follow_request_sent":false,"notifications":false,"translator_type":"none"},"geo":null,"coordinates":null,"place":null,"contributors":null,"is_quote_status":false,"retweet_count":73,"favorite_count":536,"favorited":true,"retweeted":false,"possibly_sensitive":false,"possibly_sensitive_appealable":false,"lang":"en"}'
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:51 GMT
- request:
    method: get
    uri: https://medium.com/media/7da74bb30f8a2a82b0acb89b213a018b/href
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 302
      message: Found
    headers:
      Date:
      - Thu, 19 Jul 2018 20:55:54 GMT
      Content-Type:
      - application/octet-stream
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://*.paypal.com https://getpocket.com https://medium.com:443
        https://*.medium.com:443 https://*.medium.com https://medium.com https://*.medium.com
        https://*.algolia.net https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com https://*.lightstep.com
        https://app.zencoder.com ''self''; font-src data: https://*.amazonaws.com
        https://*.medium.com https://glyph.medium.com https://medium.com https://*.gstatic.com
        https://dnqgz544uhbo8.cloudfront.net https://use.typekit.net https://cdn-static-1.medium.com
        ''self''; frame-src chromenull: https: webviewprogressproxy: medium: ''self'';
        img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1532033754035:a6df17a37a33
      X-Obvious-Info:
      - 34380-18f0be6,18f0be63222
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Expires:
      - Thu, 09 Sep 1999 09:09:09 GMT
      Pragma:
      - no-cache
      Tk:
      - T
      Location:
      - https://www.youtube.com/watch?v=QOCaacO8wus
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 43d017728e532162-EWR
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:54 GMT
- request:
    method: get
    uri: https://www.youtube.com/watch?v=QOCaacO8wus
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=utf-8
      X-Xss-Protection:
      - 1; mode=block; report=https://www.google.com/appserve/security-bugs/log/youtube
      P3p:
      - CP="This is not a P3P policy! See http://support.google.com/accounts/answer/151657?hl=en
        for more info."
      Expires:
      - Tue, 27 Apr 1971 19:44:06 EST
      Strict-Transport-Security:
      - max-age=31536000
      Cache-Control:
      - no-cache
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Date:
      - Thu, 19 Jul 2018 20:55:54 GMT
      Server:
      - YouTube Frontend Proxy
      Alt-Svc:
      - quic=":443"; ma=2592000; v="44,43,39,35"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:54 GMT
- request:
    method: get
    uri: https://api.twitter.com/1.1/statuses/show/948256083352735744.json?tweet_mode=extended
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - TwitterRubyGem/6.2.0
      Connection:
      - close
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, must-revalidate, pre-check=0, post-check=0
      Connection:
      - close
      Content-Disposition:
      - attachment; filename=json.json
      Content-Length:
      - '3845'
      Content-Type:
      - application/json;charset=utf-8
      Date:
      - Thu, 19 Jul 2018 20:55:54 GMT
      Expires:
      - Tue, 31 Mar 1981 05:00:00 GMT
      Last-Modified:
      - Thu, 19 Jul 2018 20:55:54 GMT
      Pragma:
      - no-cache
      Server:
      - tsa_b
      Status:
      - 200 OK
      Strict-Transport-Security:
      - max-age=631138519
      X-Access-Level:
      - read-write
      X-Connection-Hash:
      - 99dea21e263f0d893859536d5a1968dc
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Rate-Limit-Limit:
      - '900'
      X-Rate-Limit-Remaining:
      - '896'
      X-Rate-Limit-Reset:
      - '1532034620'
      X-Response-Time:
      - '39'
      X-Transaction:
      - 00e66d2200099435
      X-Twitter-Response-Tags:
      - BouncerCompliant
      X-Xss-Protection:
      - 1; mode=block; report=https://twitter.com/i/xss_report
    body:
      encoding: UTF-8
      string: '{"created_at":"Tue Jan 02 18:14:02 +0000 2018","id":948256083352735744,"id_str":"948256083352735744","full_text":"I''m
        a full-stack developer https:\/\/t.co\/wvFikfWJ7f","truncated":false,"display_text_range":[0,26],"entities":{"hashtags":[],"symbols":[],"user_mentions":[],"urls":[],"media":[{"id":948256051085770752,"id_str":"948256051085770752","indices":[27,50],"media_url":"http:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","url":"https:\/\/t.co\/wvFikfWJ7f","display_url":"pic.twitter.com\/wvFikfWJ7f","expanded_url":"https:\/\/twitter.com\/bendhalpern\/status\/948256083352735744\/photo\/1","type":"photo","sizes":{"large":{"w":1536,"h":2048,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":900,"h":1200,"resize":"fit"},"small":{"w":510,"h":680,"resize":"fit"}}}]},"extended_entities":{"media":[{"id":948256051085770752,"id_str":"948256051085770752","indices":[27,50],"media_url":"http:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","media_url_https":"https:\/\/pbs.twimg.com\/media\/DSjh2rkVAAApeFR.jpg","url":"https:\/\/t.co\/wvFikfWJ7f","display_url":"pic.twitter.com\/wvFikfWJ7f","expanded_url":"https:\/\/twitter.com\/bendhalpern\/status\/948256083352735744\/photo\/1","type":"photo","sizes":{"large":{"w":1536,"h":2048,"resize":"fit"},"thumb":{"w":150,"h":150,"resize":"crop"},"medium":{"w":900,"h":1200,"resize":"fit"},"small":{"w":510,"h":680,"resize":"fit"}}}]},"source":"\u003ca
        href=\"http:\/\/twitter.com\/download\/iphone\" rel=\"nofollow\"\u003eTwitter
        for iPhone\u003c\/a\u003e","in_reply_to_status_id":948243620846620673,"in_reply_to_status_id_str":"948243620846620673","in_reply_to_user_id":161419043,"in_reply_to_user_id_str":"161419043","in_reply_to_screen_name":"bendhalpern","user":{"id":161419043,"id_str":"161419043","name":"Ben
        Halpern","screen_name":"bendhalpern","location":"Brooklyn, NY","description":"Creator\/founder\/webmaster
        of https:\/\/t.co\/xHvFQQ9jeO (@ThePracticalDev). Coder, buddhist, feminist,
        Batman.","url":"https:\/\/t.co\/qqIzCffhit","entities":{"url":{"urls":[{"url":"https:\/\/t.co\/qqIzCffhit","expanded_url":"http:\/\/dev.to\/ben","display_url":"dev.to\/ben","indices":[0,23]}]},"description":{"urls":[{"url":"https:\/\/t.co\/xHvFQQ9jeO","expanded_url":"https:\/\/dev.to","display_url":"dev.to","indices":[29,52]}]}},"protected":false,"followers_count":16453,"friends_count":1720,"listed_count":423,"created_at":"Wed
        Jun 30 20:15:57 +0000 2010","favourites_count":20475,"utc_offset":null,"time_zone":null,"geo_enabled":true,"verified":true,"statuses_count":9110,"lang":"en","contributors_enabled":false,"is_translator":false,"is_translation_enabled":false,"profile_background_color":"EDECE9","profile_background_image_url":"http:\/\/abs.twimg.com\/images\/themes\/theme3\/bg.gif","profile_background_image_url_https":"https:\/\/abs.twimg.com\/images\/themes\/theme3\/bg.gif","profile_background_tile":false,"profile_image_url":"http:\/\/pbs.twimg.com\/profile_images\/855590922486136832\/g8m8zpCp_normal.jpg","profile_image_url_https":"https:\/\/pbs.twimg.com\/profile_images\/855590922486136832\/g8m8zpCp_normal.jpg","profile_banner_url":"https:\/\/pbs.twimg.com\/profile_banners\/161419043\/1492834234","profile_link_color":"3A1E75","profile_sidebar_border_color":"FFFFFF","profile_sidebar_fill_color":"E3E2DE","profile_text_color":"634047","profile_use_background_image":true,"has_extended_profile":true,"default_profile":false,"default_profile_image":false,"following":true,"follow_request_sent":false,"notifications":false,"translator_type":"none"},"geo":null,"coordinates":null,"place":null,"contributors":null,"is_quote_status":false,"retweet_count":73,"favorite_count":536,"favorited":true,"retweeted":false,"possibly_sensitive":false,"possibly_sensitive_appealable":false,"lang":"en"}'
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:54 GMT
- request:
    method: get
    uri: https://circleci.com/blog/feed.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Date:
      - Thu, 19 Jul 2018 20:55:55 GMT
      Etag:
      - '"6b7c40d8b9a5be8306e83658a5e8a1ca"'
      Last-Modified:
      - Thu, 19 Jul 2018 00:03:32 GMT
      Server:
      - nginx
      X-Amz-Id-2:
      - vnB6qbV/s18B7AMIFLirKovtD2dlEdUaEAfLc+rJ+VdBDPS+Yf3FebdCQulmXGCAVUumxQc0ZWw=
      X-Amz-Request-Id:
      - D8EF504C173E0B1A
      X-Frame-Options:
      - SAMEORIGIN
      Content-Length:
      - '13993'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:55 GMT
- request:
    method: get
    uri: https://medium.com/feed/@macsiri/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 19 Jul 2018 20:55:55 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://*.paypal.com https://getpocket.com https://medium.com:443
        https://*.medium.com:443 https://*.medium.com https://medium.com https://*.medium.com
        https://*.algolia.net https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com https://*.lightstep.com
        https://app.zencoder.com ''self''; font-src data: https://*.amazonaws.com
        https://*.medium.com https://glyph.medium.com https://medium.com https://*.gstatic.com
        https://dnqgz544uhbo8.cloudfront.net https://use.typekit.net https://cdn-static-1.medium.com
        ''self''; frame-src chromenull: https: webviewprogressproxy: medium: ''self'';
        img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1532033755481:35373922d774
      X-Obvious-Info:
      - 34380-18f0be6,18f0be63222
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Thu, 19 Jul 2018 21:10:55 GMT
      Pragma:
      - private
      Tk:
      - T
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 43d0177b982a219e-EWR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cnNzIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6Y29udGVudD0iaHR0cDovL3B1cmwub3JnL3Jzcy8xLjAvbW9kdWxlcy9jb250ZW50LyIgeG1sbnM6YXRvbT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS9BdG9tIiB2ZXJzaW9uPSIyLjAiIHhtbG5zOmNjPSJodHRwOi8vY3liZXIubGF3LmhhcnZhcmQuZWR1L3Jzcy9jcmVhdGl2ZUNvbW1vbnNSc3NNb2R1bGUuaHRtbCI+CiAgICA8Y2hhbm5lbD4KICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbU3RvcmllcyBieSBNYWMgU2lyaSBvbiBNZWRpdW1dXT48L3RpdGxlPgogICAgICAgIDxkZXNjcmlwdGlvbj48IVtDREFUQVtTdG9yaWVzIGJ5IE1hYyBTaXJpIG9uIE1lZGl1bV1dPjwvZGVzY3JpcHRpb24+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8aW1hZ2U+CiAgICAgICAgICAgIDx1cmw+aHR0cHM6Ly9jZG4taW1hZ2VzLTEubWVkaXVtLmNvbS9maXQvYy8xNTAvMTUwLzAqdzJibXRXbGFsZEtGbGI4ZS48L3VybD4KICAgICAgICAgICAgPHRpdGxlPlN0b3JpZXMgYnkgTWFjIFNpcmkgb24gTWVkaXVtPC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8L2ltYWdlPgogICAgICAgIDxnZW5lcmF0b3I+TWVkaXVtPC9nZW5lcmF0b3I+CiAgICAgICAgPGxhc3RCdWlsZERhdGU+VGh1LCAxOSBKdWwgMjAxOCAyMDo0OTo0MCBHTVQ8L2xhc3RCdWlsZERhdGU+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwczovL21lZGl1bS5jb20vZmVlZC9AbWFjc2lyaSIgcmVsPSJzZWxmIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIi8+CiAgICAgICAgPHdlYk1hc3Rlcj48IVtDREFUQVt5b3VyZnJpZW5kc0BtZWRpdW0uY29tXV0+PC93ZWJNYXN0ZXI+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwOi8vbWVkaXVtLnN1cGVyZmVlZHIuY29tIiByZWw9Imh1YiIvPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbVGVzdGluZyBSU1MgRmVlZF1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AbWFjc2lyaS90ZXN0aW5nLXJzcy1mZWVkLTZhZjA0YjdlNTdlMT9zb3VyY2U9cnNzLTRiMjYwNWRhOTM4Zi0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvNmFmMDRiN2U1N2UxPC9ndWlkPgogICAgICAgICAgICA8Y2F0ZWdvcnk+PCFbQ0RBVEFbdGVzdF1dPjwvY2F0ZWdvcnk+CiAgICAgICAgICAgIDxkYzpjcmVhdG9yPjwhW0NEQVRBW01hYyBTaXJpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5UdWUsIDAyIEphbiAyMDE4IDE5OjA2OjMwIEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE4LTA1LTA3VDE4OjIwOjMxLjU1MFo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD55b3V0dWJlIGxpbmvCoGhlcmU8L3A+PGlmcmFtZSBzcmM9Imh0dHBzOi8vY2RuLmVtYmVkbHkuY29tL3dpZGdldHMvbWVkaWEuaHRtbD9zcmM9aHR0cHMlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZlbWJlZCUyRlFPQ2FhY084d3VzJTNGZmVhdHVyZSUzRG9lbWJlZCZhbXA7dXJsPWh0dHAlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZ3YXRjaCUzRnYlM0RRT0NhYWNPOHd1cyZhbXA7aW1hZ2U9aHR0cHMlM0ElMkYlMkZpLnl0aW1nLmNvbSUyRnZpJTJGUU9DYWFjTzh3dXMlMkZocWRlZmF1bHQuanBnJmFtcDtrZXk9YTE5ZmNjMTg0Yjk3MTFlMWI0NzY0MDQwZDNkYzVjMDcmYW1wO3R5cGU9dGV4dCUyRmh0bWwmYW1wO3NjaGVtYT15b3V0dWJlIiB3aWR0aD0iODU0IiBoZWlnaHQ9IjQ4MCIgZnJhbWVib3JkZXI9IjAiIHNjcm9sbGluZz0ibm8iPjxhIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9tZWRpYS83ZGE3NGJiMzBmOGEyYTgyYjBhY2I4OWIyMTNhMDE4Yi9ocmVmIj5odHRwczovL21lZGl1bS5jb20vbWVkaWEvN2RhNzRiYjMwZjhhMmE4MmIwYWNiODliMjEzYTAxOGIvaHJlZjwvYT48L2lmcmFtZT48cD50d2VldCBoZXJlPC9wPjxzdHlsZT5ib2R5W2RhdGEtdHd0dHItcmVuZGVyZWQ9InRydWUiXSB7YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7fS50d2l0dGVyLXR3ZWV0IHttYXJnaW46IGF1dG8gIWltcG9ydGFudDt9PC9zdHlsZT48YmxvY2txdW90ZSBjbGFzcz0idHdpdHRlci10d2VldCIgZGF0YS1jb252ZXJzYXRpb249Im5vbmUiIGRhdGEtYWxpZ249ImNlbnRlciIgZGF0YS1kbnQ9InRydWUiPjxwPkkmIzM5O20gYSBmdWxsLXN0YWNrIGRldmVsb3BlcjwvcD48cD4mI3gyMDBhOyZtZGFzaDsmI3gyMDBhOzxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vYmVuZGhhbHBlcm4vc3RhdHVzLzk0ODI1NjA4MzM1MjczNTc0NCI+QGJlbmRoYWxwZXJuPC9hPjwvcD48L2Jsb2NrcXVvdGU+PHNjcmlwdCBzcmM9Ii8vcGxhdGZvcm0udHdpdHRlci5jb20vd2lkZ2V0cy5qcyIgY2hhcnNldD0idXRmLTgiPjwvc2NyaXB0PjxzY3JpcHQ+ZnVuY3Rpb24gbm90aWZ5UmVzaXplKGhlaWdodCkge2hlaWdodCA9IGhlaWdodCA/IGhlaWdodCA6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5vZmZzZXRIZWlnaHQ7IHZhciByZXNpemVkID0gZmFsc2U7IGlmICh3aW5kb3cuZG9ua2V5ICYmIGRvbmtleS5yZXNpemUpIHtkb25rZXkucmVzaXplKGhlaWdodCk7IHJlc2l6ZWQgPSB0cnVlO31pZiAocGFyZW50ICYmIHBhcmVudC5fcmVzaXplSWZyYW1lKSB7dmFyIG9iaiA9IHtpZnJhbWU6IHdpbmRvdy5mcmFtZUVsZW1lbnQsIGhlaWdodDogaGVpZ2h0fTsgcGFyZW50Ll9yZXNpemVJZnJhbWUob2JqKTsgcmVzaXplZCA9IHRydWU7fWlmICh3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2ggPT09ICIjYW1wPTEiICYmIHdpbmRvdy5wYXJlbnQgJiYgd2luZG93LnBhcmVudC5wb3N0TWVzc2FnZSkge3dpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2Uoe3NlbnRpbmVsOiAiYW1wIiwgdHlwZTogImVtYmVkLXNpemUiLCBoZWlnaHQ6IGhlaWdodH0sICIqIik7fWlmICh3aW5kb3cud2Via2l0ICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnJlc2l6ZSkge3dpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnJlc2l6ZS5wb3N0TWVzc2FnZShoZWlnaHQpOyByZXNpemVkID0gdHJ1ZTt9cmV0dXJuIHJlc2l6ZWQ7fXR3dHRyLmV2ZW50cy5iaW5kKCdyZW5kZXJlZCcsIGZ1bmN0aW9uIChldmVudCkge25vdGlmeVJlc2l6ZSgpO30pOyB0d3R0ci5ldmVudHMuYmluZCgncmVzaXplJywgZnVuY3Rpb24gKGV2ZW50KSB7bm90aWZ5UmVzaXplKCk7fSk7PC9zY3JpcHQ+PHNjcmlwdD5pZiAocGFyZW50ICYmIHBhcmVudC5fcmVzaXplSWZyYW1lKSB7dmFyIG1heFdpZHRoID0gcGFyc2VJbnQod2luZG93LmZyYW1lRWxlbWVudC5nZXRBdHRyaWJ1dGUoIndpZHRoIikpOyBpZiAoIDUwMCAgPCBtYXhXaWR0aCkge3dpbmRvdy5mcmFtZUVsZW1lbnQuc2V0QXR0cmlidXRlKCJ3aWR0aCIsICI1MDAiKTt9fTwvc2NyaXB0PjxwPkdpdGh1YiBnaXN0wqBoZXJlPC9wPjxpZnJhbWUgc3JjPSIiIHdpZHRoPSIwIiBoZWlnaHQ9IjAiIGZyYW1lYm9yZGVyPSIwIiBzY3JvbGxpbmc9Im5vIj48YSBocmVmPSJodHRwczovL21lZGl1bS5jb20vbWVkaWEvNzc3YWU4YjdkODkxNmU1NjViODRiNzA0YzA4OGNmMGMvaHJlZiI+aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzc3N2FlOGI3ZDg5MTZlNTY1Yjg0YjcwNGMwODhjZjBjL2hyZWY8L2E+PC9pZnJhbWU+PHA+Y29kZSBibG9jazwvcD48cHJlPnRlc3RzZXRzZXRzZXRzZXRzZXRzZXQ8L3ByZT48aW1nIHNyYz0iaHR0cHM6Ly9tZWRpdW0uY29tL18vc3RhdD9ldmVudD1wb3N0LmNsaWVudFZpZXdlZCZyZWZlcnJlclNvdXJjZT1mdWxsX3JzcyZwb3N0SWQ9NmFmMDRiN2U1N2UxIiB3aWR0aD0iMSIgaGVpZ2h0PSIxIj5dXT48L2NvbnRlbnQ6ZW5jb2RlZD4KICAgICAgICA8L2l0ZW0+CiAgICA8L2NoYW5uZWw+CjwvcnNzPg==
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:55 GMT
- request:
    method: get
    uri: https://circleci.com/blog/feed.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Date:
      - Thu, 19 Jul 2018 20:55:56 GMT
      Etag:
      - '"6b7c40d8b9a5be8306e83658a5e8a1ca"'
      Last-Modified:
      - Thu, 19 Jul 2018 00:03:32 GMT
      Server:
      - nginx
      X-Amz-Id-2:
      - YzEJb9zjQYr691xLxVXLaEmJkAzokpb9QNQxtrSzOTIji8xt4SeJXn+ot9y9PzE6OEd7vTTwJi8=
      X-Amz-Request-Id:
      - 3687886049F20C53
      X-Frame-Options:
      - SAMEORIGIN
      Content-Length:
      - '13993'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHJzcyB2ZXJzaW9uPSIyLjAiCiAgeG1sOmJhc2U9Imh0dHBzOi8vY2lyY2xlY2kuY29tLyIKICB4bWxuczphdG9tPSJodHRwOi8vd3d3LnczLm9yZy8yMDA1L0F0b20iCiAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIj4KICA8Y2hhbm5lbD4KICAgIDx0aXRsZT5UaGUgQ2lyY2xlQ0kgQmxvZyBGZWVkIC0gQ2lyY2xlQ0k8L3RpdGxlPgogICAgPGRlc2NyaXB0aW9uPlN0YXkgdXAgdG8gZGF0ZSB3aXRoIHRoZSBsYXRlc3QgbmV3cywgdXBkYXRlcywgYW5kIGhhY2tzIGZyb20gQ2lyY2xlQ0kuPC9kZXNjcmlwdGlvbj4KICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvPC9saW5rPgogICAgPGF0b206bGluayBocmVmPSJodHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2ZlZWQueG1sIiByZWw9InNlbGYiIHR5cGU9ImFwcGxpY2F0aW9uL3Jzcyt4bWwiIC8+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5BdXRvbWF0ZSBHaXRIdWIgUmVsZWFzZXMgd2l0aCBDaXJjbGVDSTwvdGl0bGU+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9wdWJsaXNoaW5nLXRvLWdpdGh1Yi1yZWxlYXNlcy12aWEtY2lyY2xlY2kvPC9saW5rPgogICAgICAgIDxwdWJEYXRlPkZyaSwgMTMgSnVsIDIwMTggMDM6MDA6MDAgLTA3MDA8L3B1YkRhdGU+CiAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9InRydWUiPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvcHVibGlzaGluZy10by1naXRodWItcmVsZWFzZXMtdmlhLWNpcmNsZWNpLzwvZ3VpZD4KICAgICAgICAKICAgICAgICAgIDxkYzpjcmVhdG9yPlJpY2FyZG8gTiBGZWxpY2lhbm88L2RjOmNyZWF0b3I+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8ZGVzY3JpcHRpb24+Jmx0O3AmZ3Q7UmVsZWFzZXMgaXMgYSBHaXRIdWIgZmVhdHVyZSB0aGF0IGFsbG93cyB5b3UgdG8gcHJlc2VudCBzaWduaWZpY2FudCBzbmFwc2hvdHMgb2YgeW91ciBjb2RlLCBtYXJrZWQgd2l0aCBhIGdpdCB0YWcsIGluIEdpdEh1YuKAmXMgbmljZSBVSS4gSWYgeW914oCZcmUgbm90IGN1cnJlbnRseSB1c2luZyByZWxlYXNlcywgSSB3YW50IHRvIHNob3cgeW91IHdoeSB5b3UgbWlnaHQgd2FudCB0bywgYW5kIGhvdyB0byBpbXBsZW1lbnQgdGhlbSBhdXRvbWF0aWNhbGx5LiZsdDsvcCZndDsKCiZsdDtwJmd0O1dpdGggcmVsZWFzZXMsIHlvdSBnZXQgd2hhdCB0YWdzIHByb3ZpZGXigJNhIHZlcnNpb24gbnVtYmVyIGFuZCBkZXNjcmlwdGlvbuKAk2J1dCB5b3UgYWxzbyBnZXQgYSBsb25nZXIgc2VjdGlvbiBmb3IgcmVsZWFzZSBub3RlcyBhbmQgYSBwbGFjZSB0byBzdG9yZSBhbmQgZGlzcGxheSByZWxlYXNlIGFydGlmYWN0cy4gVGhpcyBtZWFucyB5b3VyIHNvZnR3YXJl4oCZcyBiaW5hcnksIC5kZWIsIC5ycG0sIGFuZCBBcHBJbWFnZSBmaWxlcyB3aWxsIGJlIGhvc3RlZCBieSBHaXRIdWIgZm9yIGVhY2ggcmVsZWFzZSwgcHJvdmlkaW5nIGEgY29udmVuaWVudCBwbGFjZSBmb3IgdXNlcnMgdG8gaW5zdGFsbCB5b3VyIHNvZnR3YXJlLiZsdDsvcCZndDsKCiZsdDtwJmd0O0luIHRoaXMgcG9zdCwgSSB3aWxsIHNob3cgeW91IGhvdyB0byBjcmVhdGUgcmVsZWFzZXMgd2l0aGluIENpcmNsZUNJLiBGb3IgYSBtb3JlIGdlbmVyYWwgb3ZlcnZpZXcsIHNlZSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vaGVscC5naXRodWIuY29tL2FydGljbGVzL2NyZWF0aW5nLXJlbGVhc2VzLyZxdW90OyZndDtHaXRIdWLigJlzIGRvYyBvbiBjcmVhdGluZyByZWxlYXNlcyZsdDsvYSZndDsuJmx0Oy9wJmd0OwoKPC9kZXNjcmlwdGlvbj4KICAgICAgICAKICAgICAgPC9pdGVtPgogICAgCiAgICAgIAogICAgICA8aXRlbT4KICAgICAgICA8dGl0bGU+Q29udGludW91cyBwYWNrYWdlIHB1Ymxpc2hpbmcsIHBhcnQgSUk6IGF1dG9tYXRlZCBucG0gcHVibGlzaGluZyB3aXRoIENpcmNsZUNJIGFuZCBwYWNrYWdlY2xvdWQ8L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvY29udGludW91cy1wYWNrYWdlLXB1Ymxpc2hpbmctcGFydC1paS1hdXRvbWF0ZWQtbnBtLXB1Ymxpc2hpbmctd2l0aC1jaXJjbGVjaS1hbmQtcGFja2FnZWNsb3VkLzwvbGluaz4KICAgICAgICA8cHViRGF0ZT5Nb24sIDAyIEp1bCAyMDE4IDA1OjE4OjAwIC0wNzAwPC9wdWJEYXRlPgogICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJ0cnVlIj5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2NvbnRpbnVvdXMtcGFja2FnZS1wdWJsaXNoaW5nLXBhcnQtaWktYXV0b21hdGVkLW5wbS1wdWJsaXNoaW5nLXdpdGgtY2lyY2xlY2ktYW5kLXBhY2thZ2VjbG91ZC88L2d1aWQ+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8ZGVzY3JpcHRpb24+Jmx0O2gzIGlkPSZxdW90O292ZXJ2aWV3JnF1b3Q7Jmd0O092ZXJ2aWV3Jmx0Oy9oMyZndDsKCiZsdDtwJmd0O0luIHRoaXMgcG9zdCwgd2XigJlsbCBnbyBvdmVyIGVhY2ggc3RlcCBpbiBidWlsZGluZyBhIGJhc2ljIHNvZnR3YXJlIGRlbGl2ZXJ5IHBpcGVsaW5lLiBUbyBkbyB0aGlzLCB3ZeKAmWxsIHByb3ZpZGUgc29tZSBleGFtcGxlcyB0byBkZW1vbnN0cmF0ZSBhbiBhdXRvbWF0ZWQgc29mdHdhcmUgZGVsaXZlcnkgcHJvY2VzcyB3aXRoIGNvbnRpbnVvdXMgZGVsaXZlcnkgdXNpbmcgQ2lyY2xlQ0kgYXMgYSBjb250aW51b3VzIGludGVncmF0aW9uIHNlcnZlciwgYW5kIGEgcGFja2FnZSByZXBvc2l0b3J5IG9uIHBhY2thZ2VjbG91ZC4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtUbyBsZWFybiBtb3JlIGFib3V0IGZ1bmRhbWVudGFsIGNvbmNlcHRzIGFyb3VuZCBzb2Z0d2FyZSBwYWNrYWdlcyBhbmQgcGFja2FnZSBtYW5hZ2VtZW50IGFuZCBob3cgdG8gY29tYmluZSB0aGVtIHdpdGggQ0kvQ0QgdG8gYnVpbGQgYSBzb2Z0d2FyZSBkZWxpdmVyeSBwaXBlbGluZSwgcmVhZCB0aGUgcHJldmlvdXMgcG9zdCAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvY29udGludW91cy1wYWNrYWdlLXB1Ymxpc2hpbmcvJnF1b3Q7Jmd0O0NvbnRpbnVvdXMgcGFja2FnZSBwdWJsaXNoaW5nLCBwYXJ0IEk6IGludHJvZHVjdGlvbiB0byBwYWNrYWdlIG1hbmFnZW1lbnQgaW4gQ0kvQ0QmbHQ7L2EmZ3Q7LiZsdDsvcCZndDsKCjwvZGVzY3JpcHRpb24+CiAgICAgICAgCiAgICAgIDwvaXRlbT4KICAgIAogICAgICAKICAgICAgPGl0ZW0+CiAgICAgICAgPHRpdGxlPkEgbGV0dGVyIHRvIHF1ZWVyIHlvdXRoIGNvbnNpZGVyaW5nIGEgY2FyZWVyIGluIHRlY2g8L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvYS1sZXR0ZXItdG8tcXVlZXIteW91dGgtY29uc2lkZXJpbmctYS1jYXJlZXItaW4tdGVjaC88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+RnJpLCAyOSBKdW4gMjAxOCAwODo1OTowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9hLWxldHRlci10by1xdWVlci15b3V0aC1jb25zaWRlcmluZy1hLWNhcmVlci1pbi10ZWNoLzwvZ3VpZD4KICAgICAgICAKICAgICAgICAgIDxkYzpjcmVhdG9yPkRhdmlkIExvcGV6PC9kYzpjcmVhdG9yPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0OyZsdDtpJmd0O0F0IENpcmNsZUNJLCB3ZSB2YWx1ZSBkaXZlcnNpdHkgb2YgYWxsIGtpbmRzLiBPdXIgdmlicmFudCB0ZWFtIHdoYXQgbWFrZXMgdXMgd2hvIHdlIGFyZSwgYW5kIGl04oCZcyB3aGF0IGVuYWJsZXMgdXMgdG8gYnVpbGQgZ3JlYXQgcHJvZHVjdHMuIOKAmENpcmNsZUNJIFZvaWNlc+KAmSBpcyBhIG5ldyBjb2x1bW4gb24gdGhlIGJsb2cgd2hlcmUgb3VyIHRlYW0gbWVtYmVycyBjYW4gdGVsbCB0aGVpciBzdG9yaWVzIGFuZCBzaGFyZSB0aGUgdW5pcXVlIHBlcnNwZWN0aXZlcyB0aGV5IGJyaW5nIHRvIENpcmNsZUNJLiBPdXIgZmlyc3Qgc3RvcnkgY29tZXMgZnJvbSBvdXIgcmVjcnVpdGluZyBjb29yZGluYXRvciwgRGF2aWQgTG9wZXouIFdlIGhvcGUgeW91IGVuam95ISZsdDsvaSZndDsmbHQ7L3AmZ3Q7CiZsdDtociAvJmd0OwoKJmx0O3AmZ3Q7RGVhciBiZWF1dGlmdWwgeW91bmcgcXVlZXJzLCZsdDsvcCZndDsKCiZsdDtwJmd0O0kgaG9wZSB0aGlzIGxldHRlciBmaW5kcyB5b3Ugd2VsbC4gTXkgbmFtZSBpcyBEYXZpZCBMb3Blei4gSSBpZGVudGlmeSBhcyBhIGdheSBMYXRpbnggbWFsZSwgYW5kIEkgcmVjZW50bHkgZW50ZXJlZCBpbnRvIHRoZSB0ZWNoIHNwYWNlIGZyb20gdGhlIG5vbnByb2ZpdCBzZWN0b3IuIFRoZSB0cmFuc2l0aW9uIGZyb20gb25lIHdvcmxkIGludG8gdGhlIG90aGVyIGhhcyBub3QgY29tZSBlYXN5LiBJIHdhbnQgdG8gc2hhcmUgbXkgb3duIGpvdXJuZXkgb2Ygam9pbmluZyB0aGUgdGVjaCB3b3JrZm9yY2UsIGFuZCBzaG93IHlvdSB0aGF0IHdoaWxlIGl0IHdhcywgYW5kIGlzLCBhbiB1cGhpbGwgYmF0dGxlLCB0aGF0IG15IGxpZmUgZXhwZXJpZW5jZSBhcyBhIHF1ZWVyIHBlcnNvbiBhY3R1YWxseSBnYXZlIG1lIG1hbnkgb2YgdGhlIHRvb2xzIEkgbmVlZGVkIHRvIHRocml2ZSBoZXJlLiBJIGhvcGUgbXkgc3RvcnkgZ2l2ZXMgeW91IGVuY291cmFnZW1lbnQgYW5kIGhlbHBzIHlvdSBzZWUgeW91ciBwb3RlbnRpYWwgd2hlbiBwZW9wbGUgdHJ5IHRvIHRlbGwgeW91IOKAnG5vLCB5b3UgY2Fu4oCZdC7igJ0mbHQ7L3AmZ3Q7Cgo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5NaWdyYXRpbmcgZnJvbSBDaXJjbGVDSSAxLjAgdG8gMi4wOiB0aXBzIGZvciBzdWNjZXNzPC90aXRsZT4KICAgICAgICA8bGluaz5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2NpcmNsZWNpLTItMC1taWdyYXRpb24tYmVzdC1wcmFjdGljZXMvPC9saW5rPgogICAgICAgIDxwdWJEYXRlPldlZCwgMjcgSnVuIDIwMTggMDQ6MDg6MDAgLTA3MDA8L3B1YkRhdGU+CiAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9InRydWUiPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvY2lyY2xlY2ktMi0wLW1pZ3JhdGlvbi1iZXN0LXByYWN0aWNlcy88L2d1aWQ+CiAgICAgICAgCiAgICAgICAgICA8ZGM6Y3JlYXRvcj5SeWFuIE8naGFyYTwvZGM6Y3JlYXRvcj4KICAgICAgICAKICAgICAgICAKICAgICAgICAgIDxkZXNjcmlwdGlvbj4mbHQ7cCZndDtBcyBhIFNlbmlvciBTdWNjZXNzIEVuZ2luZWVyLCBJ4oCZdmUgYmVlbiBoZWxwaW5nIG1hbnkgb2Ygb3VyIGN1c3RvbWVycyBtaWdyYXRlIHRoZWlyIHByb2plY3RzIGZyb20gQ2lyY2xlQ0kgMS4wIHRvIDIuMCBvdmVyIHRoZSBwYXN0IGZldyBtb250aHMuIEFuZCBhZnRlciBtaWdyYXRpbmcgaHVuZHJlZHMgb2YgcHJvamVjdHMsIEkga25vdyB0aGUgbW9zdCBjb21tb24gcGxhY2VzIHRlYW1zIHJ1biBpbnRvIGlzc3Vlcy4gSW4gdGhpcyBibG9nIHBvc3QsIEnigJl2ZSBjb2xsZWN0ZWQgdGhlIHRpcHMgSeKAmXZlIHNoYXJlZCBtb3N0IG9mdGVuIHdpdGggY3VzdG9tZXJzIHdoaWxlIG1pZ3JhdGluZyB0aGVpciBwcm9qZWN0cyB0byBDaXJjbGVDSSAyLjAsIGFuZCBzb21lIGdvdGNoYXMgdG8gbG9vayBvdXQgZm9yIGFsb25nIHRoZSB3YXkuIEhhcHB5IG1pZ3JhdGluZyEmbHQ7L3AmZ3Q7Cgo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5DaXJjbGVDSSBtZW50b3JzIHdpdGggTWF2ZW4gWW91dGg8L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvY2lyY2xlY2ktbWVudG9ycy13aXRoLW1hdmVuLXlvdXRoLzwvbGluaz4KICAgICAgICA8cHViRGF0ZT5Nb24sIDI1IEp1biAyMDE4IDA1OjA3OjAwIC0wNzAwPC9wdWJEYXRlPgogICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJ0cnVlIj5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2NpcmNsZWNpLW1lbnRvcnMtd2l0aC1tYXZlbi15b3V0aC88L2d1aWQ+CiAgICAgICAgCiAgICAgICAgICA8ZGM6Y3JlYXRvcj5HaWxsaWFuIEJlbkFyeTwvZGM6Y3JlYXRvcj4KICAgICAgICAKICAgICAgICAKICAgICAgICAgIDxkZXNjcmlwdGlvbj4mbHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS9NYXZlbllvdXRoLmpwZyZxdW90OyBhbHQ9JnF1b3Q7TWF2ZW5Zb3V0aC5qcGcmcXVvdDsgLyZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtUaGlzIHBhc3Qgd2Vlaywgc29tZSBmb2xrcyBmcm9tIHRoZSBDaXJjbGVDSSB0ZWFtIHdlcmUgaG9ub3JlZCB0byBwYXJ0bmVyIHdpdGggJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL21hdmVueW91dGgub3JnLyZxdW90OyZndDtNYXZlbiBZb3V0aCZsdDsvYSZndDssIGEgQmF5IEFyZWEgbm9ucHJvZml0IGZvY3VzZWQgb24gc3VwcG9ydGluZyBMR0JUUSsgeW91dGggaW50ZXJlc3RlZCBpbiB0ZWNoLCBmb3IgYSBtb3JuaW5nIG9mIGZ1biBhbmQgc2tpbGwtc2hhcmluZyBhcyBwYXJ0IG9mIHRoZWlyIE1hdmVuIFlvdXRoIENhbXAuIFdlIGNob3NlIHRvIHBhcnRuZXIgd2l0aCBNYXZlbiBZb3V0aCBiZWNhdXNlIG9mIHRoZSBzdHJpZGVzIHRoZSBvcmdhbml6YXRpb24gaXMgbWFraW5nIGZvciB0aGUgcXVlZXIgeW91dGggaW4gdGVjaCwgYXMgd2VsbCBhcyBvdXIgZGVzaXJlIHRvIGRvIGltcGFjdGZ1bCB3b3JrIGluIHRoZSBsYXJnZXIgY29tbXVuaXR5IGFzIHdlIGJ1aWxkIG91ciBvd24gaW50ZXJuYWwgTEdCVFErICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRW1wbG95ZWVfcmVzb3VyY2VfZ3JvdXAmcXVvdDsmZ3Q7ZW1wbG95ZWUgcmVzb3VyY2UgZ3JvdXAmbHQ7L2EmZ3Q7IChFUkcpIGhlcmUgYXQgQ2lyY2xlQ0kuJmx0Oy9wJmd0OwoKPC9kZXNjcmlwdGlvbj4KICAgICAgICAKICAgICAgPC9pdGVtPgogICAgCiAgICAgIAogICAgICA8aXRlbT4KICAgICAgICA8dGl0bGU+Q29udGludW91cyBwYWNrYWdlIHB1Ymxpc2hpbmcsIHBhcnQgSTogaW50cm9kdWN0aW9uIHRvIHBhY2thZ2UgbWFuYWdlbWVudCBpbiBDSS9DRDwvdGl0bGU+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9jb250aW51b3VzLXBhY2thZ2UtcHVibGlzaGluZy88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+TW9uLCAyNSBKdW4gMjAxOCAwMTo0MzowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9jb250aW51b3VzLXBhY2thZ2UtcHVibGlzaGluZy88L2d1aWQ+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8ZGVzY3JpcHRpb24+Jmx0O3AmZ3Q7Jmx0O2kmZ3Q7VGhpcyBpcyB0aGUgZmlyc3Qgb2YgYSB0d28tcGFydCBzZXJpZXMgb24gcGFja2FnZSBtYW5hZ2VtZW50IGluIENJL0NELCB3cml0dGVuIGJ5IEFybWFuZG8gQ2FuYWxzLCBjby1mb3VuZGVyIGF0ICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9wYWNrYWdlY2xvdWQuaW8vJnF1b3Q7Jmd0O3BhY2thZ2VjbG91ZCZsdDsvYSZndDsuJmx0Oy9pJmd0OyZsdDsvcCZndDsKCiZsdDtoMiBpZD0mcXVvdDtvdmVydmlldyZxdW90OyZndDtPdmVydmlldyZsdDsvaDImZ3Q7CgombHQ7cCZndDtJbiB0aGlzIHBvc3QsIHdl4oCZcmUgZ29pbmcgdG8gZXhwbGFpbiBzb21lIGZ1bmRhbWVudGFsIGNvbmNlcHRzIGFyb3VuZCBzb2Z0d2FyZSBwYWNrYWdlcyBhbmQgcGFja2FnZSBtYW5hZ2VtZW50IGFuZCBob3cgdG8gY29tYmluZSB0aGVtIHdpdGggQ0kvQ0QgdG8gYnVpbGQgYSBzb2Z0d2FyZSBkZWxpdmVyeSBwaXBlbGluZS4mbHQ7L3AmZ3Q7CgombHQ7cCZndDtXZeKAmWxsIGdvIG92ZXIgc29mdHdhcmUgcGFja2FnZXMgYW5kIHJlcG9zaXRvcmllcywgY29udGludW91cyBkZWxpdmVyeSwgYW5kIGF1dG9tYXRpbmcgdGhlIGJ1aWxkaW5nLCB0ZXN0aW5nIGFuZCByZWxlYXNlIHN0YWdlcyBvZiB0aGUgc29mdHdhcmUgZGV2ZWxvcG1lbnQgcHJvY2Vzcy4mbHQ7L3AmZ3Q7Cgo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5BdXRvbWF0aWNhbGx5IGlkZW50aWZ5IHdoaWNoIGNvZGUgY2hhbmdlcyBjYXVzZWQgZXJyb3JzPC90aXRsZT4KICAgICAgICA8bGluaz5odHRwczovL2NpcmNsZWNpLmNvbS9ibG9nL2F1dG9tYXRpY2FsbHktaWRlbnRpZnktd2hpY2gtY29kZS1jaGFuZ2VzLWNhdXNlZC1lcnJvcnMvPC9saW5rPgogICAgICAgIDxwdWJEYXRlPlRodSwgMjEgSnVuIDIwMTggMDY6NTc6MDAgLTA3MDA8L3B1YkRhdGU+CiAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9InRydWUiPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvYXV0b21hdGljYWxseS1pZGVudGlmeS13aGljaC1jb2RlLWNoYW5nZXMtY2F1c2VkLWVycm9ycy88L2d1aWQ+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8ZGVzY3JpcHRpb24+Jmx0O3AmZ3Q7Jmx0O2kmZ3Q7VGhpcyBpcyB0aGUgc2Vjb25kIG9mIGEgdHdvLXBhcnQgYmxvZyBwb3N0IG9uIGRldGVjdGluZyBhbmQgY29ycmVjdGluZyBlcnJvcnMgd2l0aCBSb2xsYmFyIGFuZCBDaXJjbGVDSSwgYnkgZ3Vlc3QgY29udHJpYnV0b3IgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3R3aXR0ZXIuY29tL21vc3RseWphc29uJnF1b3Q7Jmd0O0phc29uIFNrb3dyb25za2kmbHQ7L2EmZ3Q7LiBSZWFkIHBhcnQgSSAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvdHJhY2tpbmctZXJyb3JzLWFmdGVyLWRlcGxveW1lbnRzLXdpdGgtcm9sbGJhci1hbmQtY2lyY2xlY2kvJnF1b3Q7Jmd0O2hlcmUmbHQ7L2EmZ3Q7LiZsdDsvaSZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtXaGVuIHlvdeKAmXJlIHByYWN0aWNpbmcgY29udGludW91cyBkZWxpdmVyeSwgaXTigJlzIGVzc2VudGlhbCB0aGF0IHlvdSBtb25pdG9yIHlvdXIgYXBwbGljYXRpb24gc28geW91IGtub3cgdGhhdCBpdOKAmXMgcGVyZm9ybWluZyB3ZWxsIGFmdGVyIGRlcGxveW1lbnRzLiBZb3UgbmVlZCB0byBiZSBub3RpZmllZCBpbW1lZGlhdGVseSBpZiBzb21ldGhpbmcgaXMgd3Jvbmcgb3IgaWYgdXNlcnMgYXJlIGhhdmluZyBhIHBvb3IgZXhwZXJpZW5jZSBzbyB5b3UgY2FuIHJlc29sdmUgdGhlIGlzc3VlIHF1aWNrbHkuIFdoZW4geW91ciBtb25pdG9yaW5nIHNvbHV0aW9uIGNhbiBhbHNvIHRlbGwgeW91IHdoaWNoIGNvZGUgY2hhbmdlcyBjYXVzZWQgdGhlIGVycm9yLCB5b3UgY2FuIHNhdmUgdmFsdWFibGUgdGltZSB0cm91Ymxlc2hvb3RpbmcuJmx0Oy9wJmd0OwoKPC9kZXNjcmlwdGlvbj4KICAgICAgICAKICAgICAgPC9pdGVtPgogICAgCiAgICAgIAogICAgICA8aXRlbT4KICAgICAgICA8dGl0bGU+VHJhY2tpbmcgZXJyb3JzIGFmdGVyIGRlcGxveW1lbnRzIHdpdGggUm9sbGJhciBhbmQgQ2lyY2xlQ0k8L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvdHJhY2tpbmctZXJyb3JzLWFmdGVyLWRlcGxveW1lbnRzLXdpdGgtcm9sbGJhci1hbmQtY2lyY2xlY2kvPC9saW5rPgogICAgICAgIDxwdWJEYXRlPlR1ZSwgMTkgSnVuIDIwMTggMDk6NTE6MDAgLTA3MDA8L3B1YkRhdGU+CiAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9InRydWUiPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvdHJhY2tpbmctZXJyb3JzLWFmdGVyLWRlcGxveW1lbnRzLXdpdGgtcm9sbGJhci1hbmQtY2lyY2xlY2kvPC9ndWlkPgogICAgICAgIAogICAgICAgIAogICAgICAgICAgPGRlc2NyaXB0aW9uPiZsdDtwJmd0OyZsdDtpJmd0O1RvZGF54oCZcyBibG9nIHBvc3QgaXMgdGhlIGZpcnN0IG9mIGEgdHdvLXBhcnQgc2VyaWVzIHdyaXR0ZW4gYnkgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL3R3aXR0ZXIuY29tL21vc3RseWphc29uJnF1b3Q7Jmd0O0phc29uIFNrb3dyb25za2kmbHQ7L2EmZ3Q7LCB3aG8gc2VydmVzIGFzIHRoZSBsZWFkIGVkaXRvciBmb3IgdGVjaG5pY2FsIGNvbnRlbnQgYXQgUm9sbGJhci4gSmFzb24gYmVnYW4gaGlzIGNhcmVlciBhcyBhIHNvZnR3YXJlIGRldmVsb3BlciBhdCBBbWF6b24gYW5kIG5vdyBlbmpveXMgYmVpbmcgYSBkZXZlbG9wZXIgYWR2b2NhdGUgZm9yIHRoZSBsYXRlc3QgdGVjaG5vbG9naWVzLiZsdDsvaSZndDsmbHQ7L3AmZ3Q7CgombHQ7cCZndDtBcHBsaWNhdGlvbiBlcnJvcnMgY2FuIGNhdXNlIGZydXN0cmF0aW5nIHByb2JsZW1zIGZvciBjdXN0b21lcnMgdGhhdCBtYXkgdWx0aW1hdGVseSBsZWFkIHRvIGxvc2luZyB0aGVpciB0cnVzdCBhbmQgYnVzaW5lc3MuIEV4cGVyaWVuY2VkIGRldmVsb3BlcnMga25vdyB3aGF0IGl04oCZcyBsaWtlIHRvIGhhdmUgYSBjcml0aWNhbCBwcm9kdWN0aW9uIHByb2JsZW0gYW5kIHNwZW5kIG1pbnV0ZXMgb3IgcGVyaGFwcyBldmVuIGhvdXJzIGRpYWdub3NpbmcgYSB0cmlja3kgcHJvYmxlbS4gSXTigJlzIGV2ZW4gaGFyZGVyIHRvIGRpYWdub3NlIHdoZW4gc2V2ZXJhbCBkZXZlbG9wZXJzIGFyZSBtYWtpbmcgY2hhbmdlcyBhbmQgZGVwbG95bWVudHMgaW4gcGFyYWxsZWwuJmx0Oy9wJmd0OwoKJmx0O3AmZ3Q7Jmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vcm9sbGJhci5jb20mcXVvdDsmZ3Q7Um9sbGJhciZsdDsvYSZndDsgaXMgYW4gZXJyb3IgbW9uaXRvcmluZyBzb2x1dGlvbiB0aGF0IGNhbiB0ZWxsIHlvdSB3aGF0IGVycm9ycyBvY2N1cnJlZCBhZnRlciBhIGRlcGxveW1lbnQgYW5kIHNob3cgeW91IHRoZSBkZXBsb3ltZW50IGFuZCBjb2RlIGNoYW5nZSB0aGF0IGxpa2VseSBjYXVzZWQgdGhlbS4gSXQgaW50ZWdyYXRlcyB3aXRoIHlvdXIgY29udGludW91cyBpbnRlZ3JhdGlvbiBhbmQgZGVsaXZlcnkgKENJL0NEKSBzeXN0ZW0gdG8gdHJhY2sgd2hlbiBkZXBsb3ltZW50cyBhcmUgcHJvbW90ZWQgdG8gcHJvZHVjdGlvbi4gV2hlbiBhbiBuZXcgZXJyb3Igb2NjdXJzLCBpdCBsb29rcyB1cCB0aGUgZGVwbG95ZWQgdmVyc2lvbiBpbiB5b3VyIHNvdXJjZSBjb2RlIHJlcG9zaXRvcnkgbGlrZSBHaXRIdWIgdG8gaWRlbnRpZnkgd2hhdCBjb2RlIHdhcyBjaGFuZ2VkIGFuZCB3aG8gY2hhbmdlZCBpdC4gVGhpcyB3aWxsIGhlbHAgeW91IG5hcnJvdyBkb3duIGVycm9ycyBkdWUgdG8gY29kZSBidWdzIGZhc3Rlci4mbHQ7L3AmZ3Q7CgombHQ7cCZndDsmbHQ7aW1nIHNyYz0mcXVvdDsvYmxvZy9tZWRpYS9yb2xsYmFyMS5wbmcmcXVvdDsgYWx0PSZxdW90O3JvbGxiYXIxLnBuZyZxdW90OyAvJmd0OyZsdDsvcCZndDsKCjwvZGVzY3JpcHRpb24+CiAgICAgICAgCiAgICAgIDwvaXRlbT4KICAgIAogICAgICAKICAgICAgPGl0ZW0+CiAgICAgICAgPHRpdGxlPlJlc3RydWN0dXJpbmcgTGl0aG8ncyBDaXJjbGVDSSBjb25maWcgZm9yIFdvcmtmbG93czwvdGl0bGU+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9yZXN0cnVjdHVyaW5nLWxpdGhvLXMtY2lyY2xlY2ktY29uZmlnLWZvci13b3JrZmxvd3MvPC9saW5rPgogICAgICAgIDxwdWJEYXRlPk1vbiwgMTggSnVuIDIwMTggMTA6NTA6MDAgLTA3MDA8L3B1YkRhdGU+CiAgICAgICAgPGd1aWQgaXNQZXJtYUxpbms9InRydWUiPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvcmVzdHJ1Y3R1cmluZy1saXRoby1zLWNpcmNsZWNpLWNvbmZpZy1mb3Itd29ya2Zsb3dzLzwvZ3VpZD4KICAgICAgICAKICAgICAgICAKICAgICAgICAgIDxkZXNjcmlwdGlvbj4mbHQ7cCZndDsmbHQ7aSZndDtUaGlzIGlzIGEgZ3Vlc3QgcG9zdCBieSBQYXZsb3MtUGV0cm9zIFRvdXJuYXJpcy4gSXQgb3JpZ2luYWxseSBhcHBlYXJlZCBvbiBoaXMgYmxvZyAmbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8vbWVkaXVtLmNvbS9AcC50b3VybmFyaXMvcmVzdHJ1Y3R1cmluZy1saXRob3MtY2lyY2VjaS1jb25maWctZm9yLXdvcmtmbG93cy0zOGJiOWUyOGY1NmEmcXVvdDsmZ3Q7aGVyZSZsdDsvYSZndDsuIFBhdmxvcy1QZXRyb3Mgd29ya3MgYXMgYW4gQW5kcm9pZCBzb2Z0d2FyZSBlbmdpbmVlciBhdCBXb3JrYWJsZS4gV2UgaG9wZSB5b3UgZW5qb3khJmx0Oy9pJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0OyZsdDtpbWcgc3JjPSZxdW90Oy9ibG9nL21lZGlhL2xpdGhvMS5qcGVnJnF1b3Q7IGFsdD0mcXVvdDtsaXRobzEuanBlZyZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O05lYXJseSBhIHllYXIgYW5kIGEgaGFsZiBhZ28sIEZhY2Vib29rIHJlbGVhc2VkICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9mYmxpdGhvLmNvbS8mcXVvdDsmZ3Q7TGl0aG8mbHQ7L2EmZ3Q7IGFzIGFuIG9wZW4gc291cmNlIHByb2plY3QuIExpdGhvIGlzIGFuIEFuZHJvaWQgZnJhbWV3b3JrLCB3aGljaCBsZXRzIHlvdSBkZWZpbmUgeW91ciBVSSBpbiBhIGRlY2xhcmF0aXZlIHdheS4gSXQgaW1tZWRpYXRlbHkgZ290IG15IGludGVyZXN0IGFuZCBJIHN0YXJ0ZWQgZ2V0dGluZyBteSBoYW5kcyBkaXJ0eSB3aXRoIHNvbWUgZXhhbXBsZXMgYW5kIHBldCBwcm9qZWN0cy4mbHQ7L3AmZ3Q7Cgo8L2Rlc2NyaXB0aW9uPgogICAgICAgIAogICAgICA8L2l0ZW0+CiAgICAKICAgICAgCiAgICAgIDxpdGVtPgogICAgICAgIDx0aXRsZT5Ib3cgd2Ugc3BvdHRlZC0tYW5kIGZpeGVkLS0xMSBlcnJvcnMgaW4gb3VyIGRvY3Mgd2l0aCBvdXIgbmV3IG1hcmtkb3duIHByb29mZXI8L3RpdGxlPgogICAgICAgIDxsaW5rPmh0dHBzOi8vY2lyY2xlY2kuY29tL2Jsb2cvbWFya2Rvd24tcHJvb2Zlci88L2xpbms+CiAgICAgICAgPHB1YkRhdGU+RnJpLCAxNSBKdW4gMjAxOCAwMzowMDowMCAtMDcwMDwvcHViRGF0ZT4KICAgICAgICA8Z3VpZCBpc1Blcm1hTGluaz0idHJ1ZSI+aHR0cHM6Ly9jaXJjbGVjaS5jb20vYmxvZy9tYXJrZG93bi1wcm9vZmVyLzwvZ3VpZD4KICAgICAgICAKICAgICAgICAgIDxkYzpjcmVhdG9yPlJpY2FyZG8gTiBGZWxpY2lhbm88L2RjOmNyZWF0b3I+CiAgICAgICAgCiAgICAgICAgCiAgICAgICAgICA8ZGVzY3JpcHRpb24+Jmx0O3AmZ3Q7Jmx0O2ltZyBzcmM9JnF1b3Q7L2Jsb2cvbWVkaWEvTWFya2Rvd25Qcm9vZmVyLmpwZyZxdW90OyBhbHQ9JnF1b3Q7TWFya2Rvd25Qcm9vZmVyLmpwZyZxdW90OyAvJmd0OyZsdDsvcCZndDsKCiZsdDtwJmd0O1N0YXRpYyBTaXRlIEdlbmVyYXRvcnMgKFNTR3MpIHN1Y2ggYXMgJmx0O2EgaHJlZj0mcXVvdDtodHRwOi8vZ29odWdvLmlvLyZxdW90OyZndDtIdWdvJmx0Oy9hJmd0OyBhbmQgJmx0O2EgaHJlZj0mcXVvdDtodHRwczovL2pla3lsbHJiLmNvbS8mcXVvdDsmZ3Q7SmVreWxsJmx0Oy9hJmd0OyBhcmUgYWxsIHRoZSByYWdlIG5vd2FkYXlzLgpUaGVzZSBzdGF0aWMgb24gdGhlIGJhY2tlbmQgYW5kIEphdmFTY3JpcHQgb24gdGhlIGZyb250ZW5kIHdlYnNpdGVzIGFyZSBjYWxsZWQgSkFNU3RhY2tzLgpUeXBpY2FsbHksIHdlIHRlc3QgdGhlbSBpbiB0d28gd2F5czombHQ7L3AmZ3Q7CiZsdDt1bCZndDsKICAmbHQ7bGkmZ3Q7dmlhIHRoZSBTU0cgc3VjY2Vzc2Z1bGx5IGJ1aWxkaW5nIHRoZSBzaXRlJmx0Oy9saSZndDsKICAmbHQ7bGkmZ3Q7YW5kICZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL2dqdG9yaWtpYW4vaHRtbC1wcm9vZmVyJnF1b3Q7Jmd0O0hUTUxQcm9vZmVyJmx0Oy9hJmd0OyZsdDsvbGkmZ3Q7CiZsdDsvdWwmZ3Q7CgombHQ7cCZndDtXaGF0IGlmIHdlIHdhbnRlZCB0byBkbyBtb3JlPwpMZXTigJlzIHdhbGsgdGhyb3VnaCBhIG5ldyB0b29sIEkgbWFkZSBmb3IgdGVzdGluZyBtYXJrZG93biBmaWxlcyBhbmQgaG93IGl0IGltcHJvdmVkIHRoZSBhY2N1cmFjeSBvZiBDaXJjbGVDSSBkb2NzIGV4YW1wbGVzLiZsdDsvcCZndDsKCjwvZGVzY3JpcHRpb24+CiAgICAgICAgCiAgICAgIDwvaXRlbT4KICAgIAogIDwvY2hhbm5lbD4KPC9yc3M+Cg==
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:56 GMT
- request:
    method: get
    uri: https://medium.com/feed/@macsiri/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 19 Jul 2018 20:55:56 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://*.paypal.com https://getpocket.com https://medium.com:443
        https://*.medium.com:443 https://*.medium.com https://medium.com https://*.medium.com
        https://*.algolia.net https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com https://*.lightstep.com
        https://app.zencoder.com ''self''; font-src data: https://*.amazonaws.com
        https://*.medium.com https://glyph.medium.com https://medium.com https://*.gstatic.com
        https://dnqgz544uhbo8.cloudfront.net https://use.typekit.net https://cdn-static-1.medium.com
        ''self''; frame-src chromenull: https: webviewprogressproxy: medium: ''self'';
        img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1532033756220:5eba51abb26
      X-Obvious-Info:
      - 34380-18f0be6,18f0be63222
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Thu, 19 Jul 2018 21:10:56 GMT
      Pragma:
      - private
      Tk:
      - T
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 43d017803d2a2150-EWR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cnNzIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6Y29udGVudD0iaHR0cDovL3B1cmwub3JnL3Jzcy8xLjAvbW9kdWxlcy9jb250ZW50LyIgeG1sbnM6YXRvbT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS9BdG9tIiB2ZXJzaW9uPSIyLjAiIHhtbG5zOmNjPSJodHRwOi8vY3liZXIubGF3LmhhcnZhcmQuZWR1L3Jzcy9jcmVhdGl2ZUNvbW1vbnNSc3NNb2R1bGUuaHRtbCI+CiAgICA8Y2hhbm5lbD4KICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbU3RvcmllcyBieSBNYWMgU2lyaSBvbiBNZWRpdW1dXT48L3RpdGxlPgogICAgICAgIDxkZXNjcmlwdGlvbj48IVtDREFUQVtTdG9yaWVzIGJ5IE1hYyBTaXJpIG9uIE1lZGl1bV1dPjwvZGVzY3JpcHRpb24+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8aW1hZ2U+CiAgICAgICAgICAgIDx1cmw+aHR0cHM6Ly9jZG4taW1hZ2VzLTEubWVkaXVtLmNvbS9maXQvYy8xNTAvMTUwLzAqdzJibXRXbGFsZEtGbGI4ZS48L3VybD4KICAgICAgICAgICAgPHRpdGxlPlN0b3JpZXMgYnkgTWFjIFNpcmkgb24gTWVkaXVtPC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8L2ltYWdlPgogICAgICAgIDxnZW5lcmF0b3I+TWVkaXVtPC9nZW5lcmF0b3I+CiAgICAgICAgPGxhc3RCdWlsZERhdGU+VGh1LCAxOSBKdWwgMjAxOCAyMDo0OTo0MCBHTVQ8L2xhc3RCdWlsZERhdGU+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwczovL21lZGl1bS5jb20vZmVlZC9AbWFjc2lyaSIgcmVsPSJzZWxmIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIi8+CiAgICAgICAgPHdlYk1hc3Rlcj48IVtDREFUQVt5b3VyZnJpZW5kc0BtZWRpdW0uY29tXV0+PC93ZWJNYXN0ZXI+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwOi8vbWVkaXVtLnN1cGVyZmVlZHIuY29tIiByZWw9Imh1YiIvPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbVGVzdGluZyBSU1MgRmVlZF1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AbWFjc2lyaS90ZXN0aW5nLXJzcy1mZWVkLTZhZjA0YjdlNTdlMT9zb3VyY2U9cnNzLTRiMjYwNWRhOTM4Zi0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvNmFmMDRiN2U1N2UxPC9ndWlkPgogICAgICAgICAgICA8Y2F0ZWdvcnk+PCFbQ0RBVEFbdGVzdF1dPjwvY2F0ZWdvcnk+CiAgICAgICAgICAgIDxkYzpjcmVhdG9yPjwhW0NEQVRBW01hYyBTaXJpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5UdWUsIDAyIEphbiAyMDE4IDE5OjA2OjMwIEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE4LTA1LTA3VDE4OjIwOjMxLjU1MFo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD55b3V0dWJlIGxpbmvCoGhlcmU8L3A+PGlmcmFtZSBzcmM9Imh0dHBzOi8vY2RuLmVtYmVkbHkuY29tL3dpZGdldHMvbWVkaWEuaHRtbD9zcmM9aHR0cHMlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZlbWJlZCUyRlFPQ2FhY084d3VzJTNGZmVhdHVyZSUzRG9lbWJlZCZhbXA7dXJsPWh0dHAlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZ3YXRjaCUzRnYlM0RRT0NhYWNPOHd1cyZhbXA7aW1hZ2U9aHR0cHMlM0ElMkYlMkZpLnl0aW1nLmNvbSUyRnZpJTJGUU9DYWFjTzh3dXMlMkZocWRlZmF1bHQuanBnJmFtcDtrZXk9YTE5ZmNjMTg0Yjk3MTFlMWI0NzY0MDQwZDNkYzVjMDcmYW1wO3R5cGU9dGV4dCUyRmh0bWwmYW1wO3NjaGVtYT15b3V0dWJlIiB3aWR0aD0iODU0IiBoZWlnaHQ9IjQ4MCIgZnJhbWVib3JkZXI9IjAiIHNjcm9sbGluZz0ibm8iPjxhIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9tZWRpYS83ZGE3NGJiMzBmOGEyYTgyYjBhY2I4OWIyMTNhMDE4Yi9ocmVmIj5odHRwczovL21lZGl1bS5jb20vbWVkaWEvN2RhNzRiYjMwZjhhMmE4MmIwYWNiODliMjEzYTAxOGIvaHJlZjwvYT48L2lmcmFtZT48cD50d2VldCBoZXJlPC9wPjxzdHlsZT5ib2R5W2RhdGEtdHd0dHItcmVuZGVyZWQ9InRydWUiXSB7YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7fS50d2l0dGVyLXR3ZWV0IHttYXJnaW46IGF1dG8gIWltcG9ydGFudDt9PC9zdHlsZT48YmxvY2txdW90ZSBjbGFzcz0idHdpdHRlci10d2VldCIgZGF0YS1jb252ZXJzYXRpb249Im5vbmUiIGRhdGEtYWxpZ249ImNlbnRlciIgZGF0YS1kbnQ9InRydWUiPjxwPkkmIzM5O20gYSBmdWxsLXN0YWNrIGRldmVsb3BlcjwvcD48cD4mI3gyMDBhOyZtZGFzaDsmI3gyMDBhOzxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vYmVuZGhhbHBlcm4vc3RhdHVzLzk0ODI1NjA4MzM1MjczNTc0NCI+QGJlbmRoYWxwZXJuPC9hPjwvcD48L2Jsb2NrcXVvdGU+PHNjcmlwdCBzcmM9Ii8vcGxhdGZvcm0udHdpdHRlci5jb20vd2lkZ2V0cy5qcyIgY2hhcnNldD0idXRmLTgiPjwvc2NyaXB0PjxzY3JpcHQ+ZnVuY3Rpb24gbm90aWZ5UmVzaXplKGhlaWdodCkge2hlaWdodCA9IGhlaWdodCA/IGhlaWdodCA6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5vZmZzZXRIZWlnaHQ7IHZhciByZXNpemVkID0gZmFsc2U7IGlmICh3aW5kb3cuZG9ua2V5ICYmIGRvbmtleS5yZXNpemUpIHtkb25rZXkucmVzaXplKGhlaWdodCk7IHJlc2l6ZWQgPSB0cnVlO31pZiAocGFyZW50ICYmIHBhcmVudC5fcmVzaXplSWZyYW1lKSB7dmFyIG9iaiA9IHtpZnJhbWU6IHdpbmRvdy5mcmFtZUVsZW1lbnQsIGhlaWdodDogaGVpZ2h0fTsgcGFyZW50Ll9yZXNpemVJZnJhbWUob2JqKTsgcmVzaXplZCA9IHRydWU7fWlmICh3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2ggPT09ICIjYW1wPTEiICYmIHdpbmRvdy5wYXJlbnQgJiYgd2luZG93LnBhcmVudC5wb3N0TWVzc2FnZSkge3dpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2Uoe3NlbnRpbmVsOiAiYW1wIiwgdHlwZTogImVtYmVkLXNpemUiLCBoZWlnaHQ6IGhlaWdodH0sICIqIik7fWlmICh3aW5kb3cud2Via2l0ICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnJlc2l6ZSkge3dpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnJlc2l6ZS5wb3N0TWVzc2FnZShoZWlnaHQpOyByZXNpemVkID0gdHJ1ZTt9cmV0dXJuIHJlc2l6ZWQ7fXR3dHRyLmV2ZW50cy5iaW5kKCdyZW5kZXJlZCcsIGZ1bmN0aW9uIChldmVudCkge25vdGlmeVJlc2l6ZSgpO30pOyB0d3R0ci5ldmVudHMuYmluZCgncmVzaXplJywgZnVuY3Rpb24gKGV2ZW50KSB7bm90aWZ5UmVzaXplKCk7fSk7PC9zY3JpcHQ+PHNjcmlwdD5pZiAocGFyZW50ICYmIHBhcmVudC5fcmVzaXplSWZyYW1lKSB7dmFyIG1heFdpZHRoID0gcGFyc2VJbnQod2luZG93LmZyYW1lRWxlbWVudC5nZXRBdHRyaWJ1dGUoIndpZHRoIikpOyBpZiAoIDUwMCAgPCBtYXhXaWR0aCkge3dpbmRvdy5mcmFtZUVsZW1lbnQuc2V0QXR0cmlidXRlKCJ3aWR0aCIsICI1MDAiKTt9fTwvc2NyaXB0PjxwPkdpdGh1YiBnaXN0wqBoZXJlPC9wPjxpZnJhbWUgc3JjPSIiIHdpZHRoPSIwIiBoZWlnaHQ9IjAiIGZyYW1lYm9yZGVyPSIwIiBzY3JvbGxpbmc9Im5vIj48YSBocmVmPSJodHRwczovL21lZGl1bS5jb20vbWVkaWEvNzc3YWU4YjdkODkxNmU1NjViODRiNzA0YzA4OGNmMGMvaHJlZiI+aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzc3N2FlOGI3ZDg5MTZlNTY1Yjg0YjcwNGMwODhjZjBjL2hyZWY8L2E+PC9pZnJhbWU+PHA+Y29kZSBibG9jazwvcD48cHJlPnRlc3RzZXRzZXRzZXRzZXRzZXRzZXQ8L3ByZT48aW1nIHNyYz0iaHR0cHM6Ly9tZWRpdW0uY29tL18vc3RhdD9ldmVudD1wb3N0LmNsaWVudFZpZXdlZCZyZWZlcnJlclNvdXJjZT1mdWxsX3JzcyZwb3N0SWQ9NmFmMDRiN2U1N2UxIiB3aWR0aD0iMSIgaGVpZ2h0PSIxIj5dXT48L2NvbnRlbnQ6ZW5jb2RlZD4KICAgICAgICA8L2l0ZW0+CiAgICA8L2NoYW5uZWw+CjwvcnNzPg==
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:56 GMT
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 19 Jul 2018 20:55:57 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://*.paypal.com https://getpocket.com https://medium.com:443
        https://*.medium.com:443 https://*.medium.com https://medium.com https://*.medium.com
        https://*.algolia.net https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com https://*.lightstep.com
        https://app.zencoder.com ''self''; font-src data: https://*.amazonaws.com
        https://*.medium.com https://glyph.medium.com https://medium.com https://*.gstatic.com
        https://dnqgz544uhbo8.cloudfront.net https://use.typekit.net https://cdn-static-1.medium.com
        ''self''; frame-src chromenull: https: webviewprogressproxy: medium: ''self'';
        img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1532033757088:f36ca7c9bec6
      X-Obvious-Info:
      - 34380-18f0be6,18f0be63222
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Thu, 19 Jul 2018 21:10:57 GMT
      Pragma:
      - private
      Tk:
      - T
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 43d017857d60214a-EWR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:57 GMT
- request:
    method: get
    uri: https://circleci.com/blog/feed.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/xml
      Date:
      - Thu, 19 Jul 2018 20:55:57 GMT
      Etag:
      - '"6b7c40d8b9a5be8306e83658a5e8a1ca"'
      Last-Modified:
      - Thu, 19 Jul 2018 00:03:32 GMT
      Server:
      - nginx
      X-Amz-Id-2:
      - 91w/gMy8C/LQmwE3xr+flS0yLbL0yaIfhCGxhTZ473wxgj79LcGNeTydLuUVAFBR0hD7NWrn0gw=
      X-Amz-Request-Id:
      - AA6CDBA59FCB992B
      X-Frame-Options:
      - SAMEORIGIN
      Content-Length:
      - '13993'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:57 GMT
- request:
    method: get
    uri: https://medium.com/feed/@macsiri/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 19 Jul 2018 20:55:57 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://*.paypal.com https://getpocket.com https://medium.com:443
        https://*.medium.com:443 https://*.medium.com https://medium.com https://*.medium.com
        https://*.algolia.net https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com https://*.lightstep.com
        https://app.zencoder.com ''self''; font-src data: https://*.amazonaws.com
        https://*.medium.com https://glyph.medium.com https://medium.com https://*.gstatic.com
        https://dnqgz544uhbo8.cloudfront.net https://use.typekit.net https://cdn-static-1.medium.com
        ''self''; frame-src chromenull: https: webviewprogressproxy: medium: ''self'';
        img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1532033757577:bca20a742864
      X-Obvious-Info:
      - 34380-18f0be6,18f0be63222
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Thu, 19 Jul 2018 21:10:57 GMT
      Pragma:
      - private
      Tk:
      - T
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 43d01788dc782156-EWR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cnNzIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6Y29udGVudD0iaHR0cDovL3B1cmwub3JnL3Jzcy8xLjAvbW9kdWxlcy9jb250ZW50LyIgeG1sbnM6YXRvbT0iaHR0cDovL3d3dy53My5vcmcvMjAwNS9BdG9tIiB2ZXJzaW9uPSIyLjAiIHhtbG5zOmNjPSJodHRwOi8vY3liZXIubGF3LmhhcnZhcmQuZWR1L3Jzcy9jcmVhdGl2ZUNvbW1vbnNSc3NNb2R1bGUuaHRtbCI+CiAgICA8Y2hhbm5lbD4KICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbU3RvcmllcyBieSBNYWMgU2lyaSBvbiBNZWRpdW1dXT48L3RpdGxlPgogICAgICAgIDxkZXNjcmlwdGlvbj48IVtDREFUQVtTdG9yaWVzIGJ5IE1hYyBTaXJpIG9uIE1lZGl1bV1dPjwvZGVzY3JpcHRpb24+CiAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8aW1hZ2U+CiAgICAgICAgICAgIDx1cmw+aHR0cHM6Ly9jZG4taW1hZ2VzLTEubWVkaXVtLmNvbS9maXQvYy8xNTAvMTUwLzAqdzJibXRXbGFsZEtGbGI4ZS48L3VybD4KICAgICAgICAgICAgPHRpdGxlPlN0b3JpZXMgYnkgTWFjIFNpcmkgb24gTWVkaXVtPC90aXRsZT4KICAgICAgICAgICAgPGxpbms+aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWNzaXJpP3NvdXJjZT1yc3MtNGIyNjA1ZGE5MzhmLS0tLS0tMjwvbGluaz4KICAgICAgICA8L2ltYWdlPgogICAgICAgIDxnZW5lcmF0b3I+TWVkaXVtPC9nZW5lcmF0b3I+CiAgICAgICAgPGxhc3RCdWlsZERhdGU+VGh1LCAxOSBKdWwgMjAxOCAyMDo0OTo0MCBHTVQ8L2xhc3RCdWlsZERhdGU+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwczovL21lZGl1bS5jb20vZmVlZC9AbWFjc2lyaSIgcmVsPSJzZWxmIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIi8+CiAgICAgICAgPHdlYk1hc3Rlcj48IVtDREFUQVt5b3VyZnJpZW5kc0BtZWRpdW0uY29tXV0+PC93ZWJNYXN0ZXI+CiAgICAgICAgPGF0b206bGluayBocmVmPSJodHRwOi8vbWVkaXVtLnN1cGVyZmVlZHIuY29tIiByZWw9Imh1YiIvPgogICAgICAgIDxpdGVtPgogICAgICAgICAgICA8dGl0bGU+PCFbQ0RBVEFbVGVzdGluZyBSU1MgRmVlZF1dPjwvdGl0bGU+CiAgICAgICAgICAgIDxsaW5rPmh0dHBzOi8vbWVkaXVtLmNvbS9AbWFjc2lyaS90ZXN0aW5nLXJzcy1mZWVkLTZhZjA0YjdlNTdlMT9zb3VyY2U9cnNzLTRiMjYwNWRhOTM4Zi0tLS0tLTI8L2xpbms+CiAgICAgICAgICAgIDxndWlkIGlzUGVybWFMaW5rPSJmYWxzZSI+aHR0cHM6Ly9tZWRpdW0uY29tL3AvNmFmMDRiN2U1N2UxPC9ndWlkPgogICAgICAgICAgICA8Y2F0ZWdvcnk+PCFbQ0RBVEFbdGVzdF1dPjwvY2F0ZWdvcnk+CiAgICAgICAgICAgIDxkYzpjcmVhdG9yPjwhW0NEQVRBW01hYyBTaXJpXV0+PC9kYzpjcmVhdG9yPgogICAgICAgICAgICA8cHViRGF0ZT5UdWUsIDAyIEphbiAyMDE4IDE5OjA2OjMwIEdNVDwvcHViRGF0ZT4KICAgICAgICAgICAgPGF0b206dXBkYXRlZD4yMDE4LTA1LTA3VDE4OjIwOjMxLjU1MFo8L2F0b206dXBkYXRlZD4KICAgICAgICAgICAgPGNvbnRlbnQ6ZW5jb2RlZD48IVtDREFUQVs8cD55b3V0dWJlIGxpbmvCoGhlcmU8L3A+PGlmcmFtZSBzcmM9Imh0dHBzOi8vY2RuLmVtYmVkbHkuY29tL3dpZGdldHMvbWVkaWEuaHRtbD9zcmM9aHR0cHMlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZlbWJlZCUyRlFPQ2FhY084d3VzJTNGZmVhdHVyZSUzRG9lbWJlZCZhbXA7dXJsPWh0dHAlM0ElMkYlMkZ3d3cueW91dHViZS5jb20lMkZ3YXRjaCUzRnYlM0RRT0NhYWNPOHd1cyZhbXA7aW1hZ2U9aHR0cHMlM0ElMkYlMkZpLnl0aW1nLmNvbSUyRnZpJTJGUU9DYWFjTzh3dXMlMkZocWRlZmF1bHQuanBnJmFtcDtrZXk9YTE5ZmNjMTg0Yjk3MTFlMWI0NzY0MDQwZDNkYzVjMDcmYW1wO3R5cGU9dGV4dCUyRmh0bWwmYW1wO3NjaGVtYT15b3V0dWJlIiB3aWR0aD0iODU0IiBoZWlnaHQ9IjQ4MCIgZnJhbWVib3JkZXI9IjAiIHNjcm9sbGluZz0ibm8iPjxhIGhyZWY9Imh0dHBzOi8vbWVkaXVtLmNvbS9tZWRpYS83ZGE3NGJiMzBmOGEyYTgyYjBhY2I4OWIyMTNhMDE4Yi9ocmVmIj5odHRwczovL21lZGl1bS5jb20vbWVkaWEvN2RhNzRiYjMwZjhhMmE4MmIwYWNiODliMjEzYTAxOGIvaHJlZjwvYT48L2lmcmFtZT48cD50d2VldCBoZXJlPC9wPjxzdHlsZT5ib2R5W2RhdGEtdHd0dHItcmVuZGVyZWQ9InRydWUiXSB7YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7fS50d2l0dGVyLXR3ZWV0IHttYXJnaW46IGF1dG8gIWltcG9ydGFudDt9PC9zdHlsZT48YmxvY2txdW90ZSBjbGFzcz0idHdpdHRlci10d2VldCIgZGF0YS1jb252ZXJzYXRpb249Im5vbmUiIGRhdGEtYWxpZ249ImNlbnRlciIgZGF0YS1kbnQ9InRydWUiPjxwPkkmIzM5O20gYSBmdWxsLXN0YWNrIGRldmVsb3BlcjwvcD48cD4mI3gyMDBhOyZtZGFzaDsmI3gyMDBhOzxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vYmVuZGhhbHBlcm4vc3RhdHVzLzk0ODI1NjA4MzM1MjczNTc0NCI+QGJlbmRoYWxwZXJuPC9hPjwvcD48L2Jsb2NrcXVvdGU+PHNjcmlwdCBzcmM9Ii8vcGxhdGZvcm0udHdpdHRlci5jb20vd2lkZ2V0cy5qcyIgY2hhcnNldD0idXRmLTgiPjwvc2NyaXB0PjxzY3JpcHQ+ZnVuY3Rpb24gbm90aWZ5UmVzaXplKGhlaWdodCkge2hlaWdodCA9IGhlaWdodCA/IGhlaWdodCA6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5vZmZzZXRIZWlnaHQ7IHZhciByZXNpemVkID0gZmFsc2U7IGlmICh3aW5kb3cuZG9ua2V5ICYmIGRvbmtleS5yZXNpemUpIHtkb25rZXkucmVzaXplKGhlaWdodCk7IHJlc2l6ZWQgPSB0cnVlO31pZiAocGFyZW50ICYmIHBhcmVudC5fcmVzaXplSWZyYW1lKSB7dmFyIG9iaiA9IHtpZnJhbWU6IHdpbmRvdy5mcmFtZUVsZW1lbnQsIGhlaWdodDogaGVpZ2h0fTsgcGFyZW50Ll9yZXNpemVJZnJhbWUob2JqKTsgcmVzaXplZCA9IHRydWU7fWlmICh3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2ggPT09ICIjYW1wPTEiICYmIHdpbmRvdy5wYXJlbnQgJiYgd2luZG93LnBhcmVudC5wb3N0TWVzc2FnZSkge3dpbmRvdy5wYXJlbnQucG9zdE1lc3NhZ2Uoe3NlbnRpbmVsOiAiYW1wIiwgdHlwZTogImVtYmVkLXNpemUiLCBoZWlnaHQ6IGhlaWdodH0sICIqIik7fWlmICh3aW5kb3cud2Via2l0ICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnJlc2l6ZSkge3dpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzLnJlc2l6ZS5wb3N0TWVzc2FnZShoZWlnaHQpOyByZXNpemVkID0gdHJ1ZTt9cmV0dXJuIHJlc2l6ZWQ7fXR3dHRyLmV2ZW50cy5iaW5kKCdyZW5kZXJlZCcsIGZ1bmN0aW9uIChldmVudCkge25vdGlmeVJlc2l6ZSgpO30pOyB0d3R0ci5ldmVudHMuYmluZCgncmVzaXplJywgZnVuY3Rpb24gKGV2ZW50KSB7bm90aWZ5UmVzaXplKCk7fSk7PC9zY3JpcHQ+PHNjcmlwdD5pZiAocGFyZW50ICYmIHBhcmVudC5fcmVzaXplSWZyYW1lKSB7dmFyIG1heFdpZHRoID0gcGFyc2VJbnQod2luZG93LmZyYW1lRWxlbWVudC5nZXRBdHRyaWJ1dGUoIndpZHRoIikpOyBpZiAoIDUwMCAgPCBtYXhXaWR0aCkge3dpbmRvdy5mcmFtZUVsZW1lbnQuc2V0QXR0cmlidXRlKCJ3aWR0aCIsICI1MDAiKTt9fTwvc2NyaXB0PjxwPkdpdGh1YiBnaXN0wqBoZXJlPC9wPjxpZnJhbWUgc3JjPSIiIHdpZHRoPSIwIiBoZWlnaHQ9IjAiIGZyYW1lYm9yZGVyPSIwIiBzY3JvbGxpbmc9Im5vIj48YSBocmVmPSJodHRwczovL21lZGl1bS5jb20vbWVkaWEvNzc3YWU4YjdkODkxNmU1NjViODRiNzA0YzA4OGNmMGMvaHJlZiI+aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzc3N2FlOGI3ZDg5MTZlNTY1Yjg0YjcwNGMwODhjZjBjL2hyZWY8L2E+PC9pZnJhbWU+PHA+Y29kZSBibG9jazwvcD48cHJlPnRlc3RzZXRzZXRzZXRzZXRzZXRzZXQ8L3ByZT48aW1nIHNyYz0iaHR0cHM6Ly9tZWRpdW0uY29tL18vc3RhdD9ldmVudD1wb3N0LmNsaWVudFZpZXdlZCZyZWZlcnJlclNvdXJjZT1mdWxsX3JzcyZwb3N0SWQ9NmFmMDRiN2U1N2UxIiB3aWR0aD0iMSIgaGVpZ2h0PSIxIj5dXT48L2NvbnRlbnQ6ZW5jb2RlZD4KICAgICAgICA8L2l0ZW0+CiAgICA8L2NoYW5uZWw+CjwvcnNzPg==
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:57 GMT
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 19 Jul 2018 20:55:57 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://*.paypal.com https://getpocket.com https://medium.com:443
        https://*.medium.com:443 https://*.medium.com https://medium.com https://*.medium.com
        https://*.algolia.net https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com https://*.lightstep.com
        https://app.zencoder.com ''self''; font-src data: https://*.amazonaws.com
        https://*.medium.com https://glyph.medium.com https://medium.com https://*.gstatic.com
        https://dnqgz544uhbo8.cloudfront.net https://use.typekit.net https://cdn-static-1.medium.com
        ''self''; frame-src chromenull: https: webviewprogressproxy: medium: ''self'';
        img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1532033757823:e9c004482756
      X-Obvious-Info:
      - 34380-18f0be6,18f0be63222
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Thu, 19 Jul 2018 21:10:57 GMT
      Pragma:
      - private
      Tk:
      - T
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 43d0178a3ec52186-EWR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:57 GMT
- request:
    method: get
    uri: https://medium.com/feed/@vaidehijoshi
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 19 Jul 2018 20:55:58 GMT
      Content-Type:
      - text/xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Content-Security-Policy:
      - 'default-src ''self''; connect-src https://localhost https://*.instapaper.com
        https://*.stripe.com https://*.paypal.com https://getpocket.com https://medium.com:443
        https://*.medium.com:443 https://*.medium.com https://medium.com https://*.medium.com
        https://*.algolia.net https://cdn-static-1.medium.com https://dnqgz544uhbo8.cloudfront.net
        https://cdn-videos-1.medium.com https://cdn-audio-1.medium.com https://*.lightstep.com
        https://app.zencoder.com ''self''; font-src data: https://*.amazonaws.com
        https://*.medium.com https://glyph.medium.com https://medium.com https://*.gstatic.com
        https://dnqgz544uhbo8.cloudfront.net https://use.typekit.net https://cdn-static-1.medium.com
        ''self''; frame-src chromenull: https: webviewprogressproxy: medium: ''self'';
        img-src blob: data: https: ''self''; media-src https://*.cdn.vine.co https://d1fcbxp97j4nb2.cloudfront.net
        https://d262ilb51hltx0.cloudfront.net https://*.medium.com https://gomiro.medium.com
        https://miro.medium.com https://pbs.twimg.com ''self'' blob:; object-src ''self'';
        script-src ''unsafe-eval'' ''unsafe-inline'' about: https: ''self''; style-src
        ''unsafe-inline'' data: https: ''self''; report-uri https://csp.medium.com'
      X-Frame-Options:
      - sameorigin
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Ua-Compatible:
      - IE=edge, Chrome=1
      X-Powered-By:
      - Medium
      X-Obvious-Tid:
      - 1532033758304:39f7612ae98
      X-Obvious-Info:
      - 34380-18f0be6,18f0be63222
      Link:
      - <https://medium.com/humans.txt>; rel="humans"
      Cache-Control:
      - private, must-revalidate, max-age=900
      Expires:
      - Thu, 19 Jul 2018 21:10:58 GMT
      Pragma:
      - private
      Tk:
      - T
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains; preload
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 43d0178d7fad2150-EWR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 19 Jul 2018 20:55:58 GMT
recorded_with: VCR 4.0.0
